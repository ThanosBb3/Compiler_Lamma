State 74 conflicts: 1 shift/reduce
State 82 conflicts: 24 shift/reduce
State 84 conflicts: 24 shift/reduce
State 112 conflicts: 22 shift/reduce
State 128 conflicts: 22 shift/reduce
State 131 conflicts: 1 shift/reduce
State 134 conflicts: 22 shift/reduce
State 135 conflicts: 2 shift/reduce
State 138 conflicts: 2 shift/reduce
State 144 conflicts: 2 shift/reduce
State 173 conflicts: 12 shift/reduce
State 184 conflicts: 22 shift/reduce
State 195 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program letdef
    3        | program typedef

    4 letdef: "let" def muldef
    5       | "let" "rec" def muldef

    6 muldef: %empty
    7       | muldef "and" def

    8 def: T_id mulpar '=' expr
    9    | T_id mulpar ':' type '=' expr
   10    | "mutable" T_id
   11    | "mutable" T_id ':' type
   12    | "mutable" T_id '[' expr mulexpr ']'
   13    | "mutable" T_id '[' expr mulexpr ']' ':' type

   14 mulpar: %empty
   15       | mulpar par

   16 mulexpr: %empty
   17        | mulexpr ',' expr

   18 typedef: "type" tdef multdef

   19 multdef: %empty
   20        | multdef "and" tdef

   21 tdef: T_id '=' constr mulconstr

   22 mulconstr: %empty
   23          | mulconstr '|' constr

   24 constr: T_Id
   25       | T_Id "of" type multype

   26 multype: %empty
   27        | multype type

   28 par: T_id
   29    | '(' T_id ':' type ')'

   30 type: "unit"
   31     | "int"
   32     | "char"
   33     | "bool"
   34     | "float"
   35     | '(' type ')'
   36     | type "->" type
   37     | type "ref"
   38     | "array" "of" type
   39     | "array" '[' '*' muldim ']' "of" type
   40     | T_id

   41 muldim: %empty
   42       | muldim ',' '*'

   43 expr: T_integer
   44     | T_real
   45     | T_character
   46     | T_string
   47     | "true"
   48     | "false"
   49     | '(' ')'
   50     | '(' expr ')'
   51     | unop expr
   52     | expr binop expr
   53     | T_id mulexpr2
   54     | T_Id mulexpr2
   55     | T_id '[' expr mulexpr ']'
   56     | "dim" T_id
   57     | "dim" T_integer T_id
   58     | "new" type
   59     | "delete" expr
   60     | letdef "in" expr
   61     | "begin" expr "end"
   62     | "if" expr "then" expr
   63     | "if" expr "then" expr "else" expr
   64     | "while" expr "do" expr "done"
   65     | "for" T_id '=' expr "to" expr "do" expr "done"
   66     | "for" T_id '=' expr "downto" expr "do" expr "done"
   67     | "match" expr "with" clause mulclause "end"

   68 mulexpr2: %empty
   69         | mulexpr2 expr

   70 mulclause: %empty
   71          | mulclause '|' clause

   72 unop: '+'
   73     | '-'
   74     | "+."
   75     | "-."
   76     | '!'
   77     | "not"

   78 binop: '+'
   79      | '-'
   80      | '*'
   81      | '/'
   82      | "+."
   83      | "-."
   84      | "*."
   85      | "/."
   86      | "mod"
   87      | "**"
   88      | '='
   89      | "<>"
   90      | '<'
   91      | '>'
   92      | "<="
   93      | ">="
   94      | "=="
   95      | "!="
   96      | "&&"
   97      | "||"
   98      | ';'
   99      | ":="

  100 clause: pattern "->" expr

  101 pattern: T_integer
  102        | '+' T_integer
  103        | '-' T_integer
  104        | T_real
  105        | "+." T_real
  106        | "-." T_real
  107        | T_character
  108        | "true"
  109        | "false"
  110        | T_id
  111        | '(' pattern ')'
  112        | T_Id mulpat

  113 mulpat: %empty
  114       | mulpat pattern


Terminals, with rules where they appear

$end (0) 0
'!' (33) 76
'(' (40) 29 35 49 50 111
')' (41) 29 35 49 50 111
'*' (42) 39 42 80
'+' (43) 72 78 102
',' (44) 17 42
'-' (45) 73 79 103
'/' (47) 81
':' (58) 9 11 13 29
';' (59) 98
'<' (60) 90
'=' (61) 8 9 21 65 66 88
'>' (62) 91
'[' (91) 12 13 39 55
']' (93) 12 13 39 55
'|' (124) 23 71
error (256)
"and" (258) 7 20
"array" (259) 38 39
"begin" (260) 61
"bool" (261) 33
"char" (262) 32
"delete" (263) 59
"dim" (264) 56 57
"do" (265) 64 65 66
"done" (266) 64 65 66
"downto" (267) 66
"else" (268) 63
"end" (269) 61 67
"false" (270) 48 109
"float" (271) 34
"for" (272) 65 66
"if" (273) 62 63
"in" (274) 60
"int" (275) 31
"let" (276) 4 5
"match" (277) 67
"mod" (278) 86
"mutable" (279) 10 11 12 13
"new" (280) 58
"not" (281) 77
"of" (282) 25 38 39
"rec" (283) 5
"ref" (284) 37
"then" (285) 62 63
"to" (286) 65
"true" (287) 47 108
"type" (288) 18
"unit" (289) 30
"while" (290) 64
"with" (291) 67
":=" (292) 99
"||" (293) 97
"&&" (294) 96
"<>" (295) 89
"<=" (296) 92
">=" (297) 93
"==" (298) 94
"!=" (299) 95
"+." (300) 74 82 105
"-." (301) 75 83 106
"*." (302) 84
"/." (303) 85
"**" (304) 87
T_Id (305) 24 25 54 112
T_id (306) 8 9 10 11 12 13 21 28 29 40 53 55 56 57 65 66 110
T_integer (307) 43 57 101 102 103
T_real (308) 44 104 105 106
T_character (309) 45 107
T_string (310) 46
"->" (311) 36 100


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
program (74)
    on left: 1 2 3, on right: 0 2 3
letdef (75)
    on left: 4 5, on right: 2 60
muldef (76)
    on left: 6 7, on right: 4 5 7
def (77)
    on left: 8 9 10 11 12 13, on right: 4 5 7
mulpar (78)
    on left: 14 15, on right: 8 9 15
mulexpr (79)
    on left: 16 17, on right: 12 13 17 55
typedef (80)
    on left: 18, on right: 3
multdef (81)
    on left: 19 20, on right: 18 20
tdef (82)
    on left: 21, on right: 18 20
mulconstr (83)
    on left: 22 23, on right: 21 23
constr (84)
    on left: 24 25, on right: 21 23
multype (85)
    on left: 26 27, on right: 25 27
par (86)
    on left: 28 29, on right: 15
type (87)
    on left: 30 31 32 33 34 35 36 37 38 39 40, on right: 9 11 13 25
    27 29 35 36 37 38 39 58
muldim (88)
    on left: 41 42, on right: 39 42
expr (89)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 65 66 67, on right: 8 9 12 13 17 50 51 52 55 59 60
    61 62 63 64 65 66 67 69 100
mulexpr2 (90)
    on left: 68 69, on right: 53 54 69
mulclause (91)
    on left: 70 71, on right: 67 71
unop (92)
    on left: 72 73 74 75 76 77, on right: 51
binop (93)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    96 97 98 99, on right: 52
clause (94)
    on left: 100, on right: 67 71
pattern (95)
    on left: 101 102 103 104 105 106 107 108 109 110 111 112, on right:
    100 111 114
mulpat (96)
    on left: 113 114, on right: 112 114


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . letdef
    3        | program . typedef

    $end    shift, and go to state 2
    "let"   shift, and go to state 3
    "type"  shift, and go to state 4

    letdef   go to state 5
    typedef  go to state 6


State 2

    0 $accept: program $end .

    $default  accept


State 3

    4 letdef: "let" . def muldef
    5       | "let" . "rec" def muldef

    "mutable"  shift, and go to state 7
    "rec"      shift, and go to state 8
    T_id       shift, and go to state 9

    def  go to state 10


State 4

   18 typedef: "type" . tdef multdef

    T_id  shift, and go to state 11

    tdef  go to state 12


State 5

    2 program: program letdef .

    $default  reduce using rule 2 (program)


State 6

    3 program: program typedef .

    $default  reduce using rule 3 (program)


State 7

   10 def: "mutable" . T_id
   11    | "mutable" . T_id ':' type
   12    | "mutable" . T_id '[' expr mulexpr ']'
   13    | "mutable" . T_id '[' expr mulexpr ']' ':' type

    T_id  shift, and go to state 13


State 8

    5 letdef: "let" "rec" . def muldef

    "mutable"  shift, and go to state 7
    T_id       shift, and go to state 9

    def  go to state 14


State 9

    8 def: T_id . mulpar '=' expr
    9    | T_id . mulpar ':' type '=' expr

    $default  reduce using rule 14 (mulpar)

    mulpar  go to state 15


State 10

    4 letdef: "let" def . muldef

    $default  reduce using rule 6 (muldef)

    muldef  go to state 16


State 11

   21 tdef: T_id . '=' constr mulconstr

    '='  shift, and go to state 17


State 12

   18 typedef: "type" tdef . multdef

    $default  reduce using rule 19 (multdef)

    multdef  go to state 18


State 13

   10 def: "mutable" T_id .
   11    | "mutable" T_id . ':' type
   12    | "mutable" T_id . '[' expr mulexpr ']'
   13    | "mutable" T_id . '[' expr mulexpr ']' ':' type

    '['  shift, and go to state 19
    ':'  shift, and go to state 20

    $default  reduce using rule 10 (def)


State 14

    5 letdef: "let" "rec" def . muldef

    $default  reduce using rule 6 (muldef)

    muldef  go to state 21


State 15

    8 def: T_id mulpar . '=' expr
    9    | T_id mulpar . ':' type '=' expr
   15 mulpar: mulpar . par

    '='   shift, and go to state 22
    T_id  shift, and go to state 23
    ':'   shift, and go to state 24
    '('   shift, and go to state 25

    par  go to state 26


State 16

    4 letdef: "let" def muldef .
    7 muldef: muldef . "and" def

    "and"  shift, and go to state 27

    $default  reduce using rule 4 (letdef)


State 17

   21 tdef: T_id '=' . constr mulconstr

    T_Id  shift, and go to state 28

    constr  go to state 29


State 18

   18 typedef: "type" tdef multdef .
   20 multdef: multdef . "and" tdef

    "and"  shift, and go to state 30

    $default  reduce using rule 18 (typedef)


State 19

   12 def: "mutable" T_id '[' . expr mulexpr ']'
   13    | "mutable" T_id '[' . expr mulexpr ']' ':' type

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 55
    unop    go to state 56


State 20

   11 def: "mutable" T_id ':' . type

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    type  go to state 65


State 21

    5 letdef: "let" "rec" def muldef .
    7 muldef: muldef . "and" def

    "and"  shift, and go to state 27

    $default  reduce using rule 5 (letdef)


State 22

    8 def: T_id mulpar '=' . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 66
    unop    go to state 56


State 23

   28 par: T_id .

    $default  reduce using rule 28 (par)


State 24

    9 def: T_id mulpar ':' . type '=' expr

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    type  go to state 67


State 25

   29 par: '(' . T_id ':' type ')'

    T_id  shift, and go to state 68


State 26

   15 mulpar: mulpar par .

    $default  reduce using rule 15 (mulpar)


State 27

    7 muldef: muldef "and" . def

    "mutable"  shift, and go to state 7
    T_id       shift, and go to state 9

    def  go to state 69


State 28

   24 constr: T_Id .
   25       | T_Id . "of" type multype

    "of"  shift, and go to state 70

    $default  reduce using rule 24 (constr)


State 29

   21 tdef: T_id '=' constr . mulconstr

    $default  reduce using rule 22 (mulconstr)

    mulconstr  go to state 71


State 30

   20 multdef: multdef "and" . tdef

    T_id  shift, and go to state 11

    tdef  go to state 72


State 31

   61 expr: "begin" . expr "end"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 73
    unop    go to state 56


State 32

   59 expr: "delete" . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 74
    unop    go to state 56


State 33

   56 expr: "dim" . T_id
   57     | "dim" . T_integer T_id

    T_id       shift, and go to state 75
    T_integer  shift, and go to state 76


State 34

   48 expr: "false" .

    $default  reduce using rule 48 (expr)


State 35

   65 expr: "for" . T_id '=' expr "to" expr "do" expr "done"
   66     | "for" . T_id '=' expr "downto" expr "do" expr "done"

    T_id  shift, and go to state 77


State 36

   62 expr: "if" . expr "then" expr
   63     | "if" . expr "then" expr "else" expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 78
    unop    go to state 56


State 37

   67 expr: "match" . expr "with" clause mulclause "end"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 79
    unop    go to state 56


State 38

   58 expr: "new" . type

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    type  go to state 80


State 39

   77 unop: "not" .

    $default  reduce using rule 77 (unop)


State 40

   47 expr: "true" .

    $default  reduce using rule 47 (expr)


State 41

   64 expr: "while" . expr "do" expr "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 81
    unop    go to state 56


State 42

   72 unop: '+' .

    $default  reduce using rule 72 (unop)


State 43

   73 unop: '-' .

    $default  reduce using rule 73 (unop)


State 44

   74 unop: "+." .

    $default  reduce using rule 74 (unop)


State 45

   75 unop: "-." .

    $default  reduce using rule 75 (unop)


State 46

   76 unop: '!' .

    $default  reduce using rule 76 (unop)


State 47

   54 expr: T_Id . mulexpr2

    $default  reduce using rule 68 (mulexpr2)

    mulexpr2  go to state 82


State 48

   53 expr: T_id . mulexpr2
   55     | T_id . '[' expr mulexpr ']'

    '['  shift, and go to state 83

    $default  reduce using rule 68 (mulexpr2)

    mulexpr2  go to state 84


State 49

   43 expr: T_integer .

    $default  reduce using rule 43 (expr)


State 50

   44 expr: T_real .

    $default  reduce using rule 44 (expr)


State 51

   45 expr: T_character .

    $default  reduce using rule 45 (expr)


State 52

   46 expr: T_string .

    $default  reduce using rule 46 (expr)


State 53

   49 expr: '(' . ')'
   50     | '(' . expr ')'

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53
    ')'          shift, and go to state 85

    letdef  go to state 54
    expr    go to state 86
    unop    go to state 56


State 54

   60 expr: letdef . "in" expr

    "in"  shift, and go to state 87


State 55

   12 def: "mutable" T_id '[' expr . mulexpr ']'
   13    | "mutable" T_id '[' expr . mulexpr ']' ':' type
   52 expr: expr . binop expr

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    $default  reduce using rule 16 (mulexpr)

    mulexpr  go to state 110
    binop    go to state 111


State 56

   51 expr: unop . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 112
    unop    go to state 56


State 57

   38 type: "array" . "of" type
   39     | "array" . '[' '*' muldim ']' "of" type

    "of"  shift, and go to state 113
    '['   shift, and go to state 114


State 58

   33 type: "bool" .

    $default  reduce using rule 33 (type)


State 59

   32 type: "char" .

    $default  reduce using rule 32 (type)


State 60

   34 type: "float" .

    $default  reduce using rule 34 (type)


State 61

   31 type: "int" .

    $default  reduce using rule 31 (type)


State 62

   30 type: "unit" .

    $default  reduce using rule 30 (type)


State 63

   40 type: T_id .

    $default  reduce using rule 40 (type)


State 64

   35 type: '(' . type ')'

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    type  go to state 115


State 65

   11 def: "mutable" T_id ':' type .
   36 type: type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 116
    "->"   shift, and go to state 117

    $default  reduce using rule 11 (def)


State 66

    8 def: T_id mulpar '=' expr .
   52 expr: expr . binop expr

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    $default  reduce using rule 8 (def)

    binop  go to state 111


State 67

    9 def: T_id mulpar ':' type . '=' expr
   36 type: type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 116
    '='    shift, and go to state 118
    "->"   shift, and go to state 117


State 68

   29 par: '(' T_id . ':' type ')'

    ':'  shift, and go to state 119


State 69

    7 muldef: muldef "and" def .

    $default  reduce using rule 7 (muldef)


State 70

   25 constr: T_Id "of" . type multype

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    type  go to state 120


State 71

   21 tdef: T_id '=' constr mulconstr .
   23 mulconstr: mulconstr . '|' constr

    '|'  shift, and go to state 121

    $default  reduce using rule 21 (tdef)


State 72

   20 multdef: multdef "and" tdef .

    $default  reduce using rule 20 (multdef)


State 73

   52 expr: expr . binop expr
   61     | "begin" expr . "end"

    "end"  shift, and go to state 122
    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    binop  go to state 111


State 74

   52 expr: expr . binop expr
   59     | "delete" expr .

    "mod"  shift, and go to state 88

    "mod"     [reduce using rule 59 (expr)]
    $default  reduce using rule 59 (expr)

    binop  go to state 111


State 75

   56 expr: "dim" T_id .

    $default  reduce using rule 56 (expr)


State 76

   57 expr: "dim" T_integer . T_id

    T_id  shift, and go to state 123


State 77

   65 expr: "for" T_id . '=' expr "to" expr "do" expr "done"
   66     | "for" T_id . '=' expr "downto" expr "do" expr "done"

    '='  shift, and go to state 124


State 78

   52 expr: expr . binop expr
   62     | "if" expr . "then" expr
   63     | "if" expr . "then" expr "else" expr

    "mod"   shift, and go to state 88
    "then"  shift, and go to state 125
    ';'     shift, and go to state 89
    ":="    shift, and go to state 90
    "||"    shift, and go to state 91
    "&&"    shift, and go to state 92
    '='     shift, and go to state 93
    "<>"    shift, and go to state 94
    '<'     shift, and go to state 95
    '>'     shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    '+'     shift, and go to state 101
    '-'     shift, and go to state 102
    "+."    shift, and go to state 103
    "-."    shift, and go to state 104
    '*'     shift, and go to state 105
    '/'     shift, and go to state 106
    "*."    shift, and go to state 107
    "/."    shift, and go to state 108
    "**"    shift, and go to state 109

    binop  go to state 111


State 79

   52 expr: expr . binop expr
   67     | "match" expr . "with" clause mulclause "end"

    "mod"   shift, and go to state 88
    "with"  shift, and go to state 126
    ';'     shift, and go to state 89
    ":="    shift, and go to state 90
    "||"    shift, and go to state 91
    "&&"    shift, and go to state 92
    '='     shift, and go to state 93
    "<>"    shift, and go to state 94
    '<'     shift, and go to state 95
    '>'     shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    '+'     shift, and go to state 101
    '-'     shift, and go to state 102
    "+."    shift, and go to state 103
    "-."    shift, and go to state 104
    '*'     shift, and go to state 105
    '/'     shift, and go to state 106
    "*."    shift, and go to state 107
    "/."    shift, and go to state 108
    "**"    shift, and go to state 109

    binop  go to state 111


State 80

   36 type: type . "->" type
   37     | type . "ref"
   58 expr: "new" type .

    "ref"  shift, and go to state 116
    "->"   shift, and go to state 117

    $default  reduce using rule 58 (expr)


State 81

   52 expr: expr . binop expr
   64     | "while" expr . "do" expr "done"

    "do"   shift, and go to state 127
    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    binop  go to state 111


State 82

   54 expr: T_Id mulexpr2 .
   69 mulexpr2: mulexpr2 . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    "begin"      [reduce using rule 54 (expr)]
    "delete"     [reduce using rule 54 (expr)]
    "dim"        [reduce using rule 54 (expr)]
    "false"      [reduce using rule 54 (expr)]
    "for"        [reduce using rule 54 (expr)]
    "if"         [reduce using rule 54 (expr)]
    "let"        [reduce using rule 54 (expr)]
    "match"      [reduce using rule 54 (expr)]
    "new"        [reduce using rule 54 (expr)]
    "not"        [reduce using rule 54 (expr)]
    "true"       [reduce using rule 54 (expr)]
    "while"      [reduce using rule 54 (expr)]
    '+'          [reduce using rule 54 (expr)]
    '-'          [reduce using rule 54 (expr)]
    "+."         [reduce using rule 54 (expr)]
    "-."         [reduce using rule 54 (expr)]
    '!'          [reduce using rule 54 (expr)]
    T_Id         [reduce using rule 54 (expr)]
    T_id         [reduce using rule 54 (expr)]
    T_integer    [reduce using rule 54 (expr)]
    T_real       [reduce using rule 54 (expr)]
    T_character  [reduce using rule 54 (expr)]
    T_string     [reduce using rule 54 (expr)]
    '('          [reduce using rule 54 (expr)]
    $default     reduce using rule 54 (expr)

    letdef  go to state 54
    expr    go to state 128
    unop    go to state 56


State 83

   55 expr: T_id '[' . expr mulexpr ']'

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 129
    unop    go to state 56


State 84

   53 expr: T_id mulexpr2 .
   69 mulexpr2: mulexpr2 . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    "begin"      [reduce using rule 53 (expr)]
    "delete"     [reduce using rule 53 (expr)]
    "dim"        [reduce using rule 53 (expr)]
    "false"      [reduce using rule 53 (expr)]
    "for"        [reduce using rule 53 (expr)]
    "if"         [reduce using rule 53 (expr)]
    "let"        [reduce using rule 53 (expr)]
    "match"      [reduce using rule 53 (expr)]
    "new"        [reduce using rule 53 (expr)]
    "not"        [reduce using rule 53 (expr)]
    "true"       [reduce using rule 53 (expr)]
    "while"      [reduce using rule 53 (expr)]
    '+'          [reduce using rule 53 (expr)]
    '-'          [reduce using rule 53 (expr)]
    "+."         [reduce using rule 53 (expr)]
    "-."         [reduce using rule 53 (expr)]
    '!'          [reduce using rule 53 (expr)]
    T_Id         [reduce using rule 53 (expr)]
    T_id         [reduce using rule 53 (expr)]
    T_integer    [reduce using rule 53 (expr)]
    T_real       [reduce using rule 53 (expr)]
    T_character  [reduce using rule 53 (expr)]
    T_string     [reduce using rule 53 (expr)]
    '('          [reduce using rule 53 (expr)]
    $default     reduce using rule 53 (expr)

    letdef  go to state 54
    expr    go to state 128
    unop    go to state 56


State 85

   49 expr: '(' ')' .

    $default  reduce using rule 49 (expr)


State 86

   50 expr: '(' expr . ')'
   52     | expr . binop expr

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109
    ')'    shift, and go to state 130

    binop  go to state 111


State 87

   60 expr: letdef "in" . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 131
    unop    go to state 56


State 88

   86 binop: "mod" .

    $default  reduce using rule 86 (binop)


State 89

   98 binop: ';' .

    $default  reduce using rule 98 (binop)


State 90

   99 binop: ":=" .

    $default  reduce using rule 99 (binop)


State 91

   97 binop: "||" .

    $default  reduce using rule 97 (binop)


State 92

   96 binop: "&&" .

    $default  reduce using rule 96 (binop)


State 93

   88 binop: '=' .

    $default  reduce using rule 88 (binop)


State 94

   89 binop: "<>" .

    $default  reduce using rule 89 (binop)


State 95

   90 binop: '<' .

    $default  reduce using rule 90 (binop)


State 96

   91 binop: '>' .

    $default  reduce using rule 91 (binop)


State 97

   92 binop: "<=" .

    $default  reduce using rule 92 (binop)


State 98

   93 binop: ">=" .

    $default  reduce using rule 93 (binop)


State 99

   94 binop: "==" .

    $default  reduce using rule 94 (binop)


State 100

   95 binop: "!=" .

    $default  reduce using rule 95 (binop)


State 101

   78 binop: '+' .

    $default  reduce using rule 78 (binop)


State 102

   79 binop: '-' .

    $default  reduce using rule 79 (binop)


State 103

   82 binop: "+." .

    $default  reduce using rule 82 (binop)


State 104

   83 binop: "-." .

    $default  reduce using rule 83 (binop)


State 105

   80 binop: '*' .

    $default  reduce using rule 80 (binop)


State 106

   81 binop: '/' .

    $default  reduce using rule 81 (binop)


State 107

   84 binop: "*." .

    $default  reduce using rule 84 (binop)


State 108

   85 binop: "/." .

    $default  reduce using rule 85 (binop)


State 109

   87 binop: "**" .

    $default  reduce using rule 87 (binop)


State 110

   12 def: "mutable" T_id '[' expr mulexpr . ']'
   13    | "mutable" T_id '[' expr mulexpr . ']' ':' type
   17 mulexpr: mulexpr . ',' expr

    ']'  shift, and go to state 132
    ','  shift, and go to state 133


State 111

   52 expr: expr binop . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 134
    unop    go to state 56


State 112

   51 expr: unop expr .
   52     | expr . binop expr

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    "mod"     [reduce using rule 51 (expr)]
    ';'       [reduce using rule 51 (expr)]
    ":="      [reduce using rule 51 (expr)]
    "||"      [reduce using rule 51 (expr)]
    "&&"      [reduce using rule 51 (expr)]
    '='       [reduce using rule 51 (expr)]
    "<>"      [reduce using rule 51 (expr)]
    '<'       [reduce using rule 51 (expr)]
    '>'       [reduce using rule 51 (expr)]
    "<="      [reduce using rule 51 (expr)]
    ">="      [reduce using rule 51 (expr)]
    "=="      [reduce using rule 51 (expr)]
    "!="      [reduce using rule 51 (expr)]
    '+'       [reduce using rule 51 (expr)]
    '-'       [reduce using rule 51 (expr)]
    "+."      [reduce using rule 51 (expr)]
    "-."      [reduce using rule 51 (expr)]
    '*'       [reduce using rule 51 (expr)]
    '/'       [reduce using rule 51 (expr)]
    "*."      [reduce using rule 51 (expr)]
    "/."      [reduce using rule 51 (expr)]
    "**"      [reduce using rule 51 (expr)]
    $default  reduce using rule 51 (expr)

    binop  go to state 111


State 113

   38 type: "array" "of" . type

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    type  go to state 135


State 114

   39 type: "array" '[' . '*' muldim ']' "of" type

    '*'  shift, and go to state 136


State 115

   35 type: '(' type . ')'
   36     | type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 116
    ')'    shift, and go to state 137
    "->"   shift, and go to state 117


State 116

   37 type: type "ref" .

    $default  reduce using rule 37 (type)


State 117

   36 type: type "->" . type

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    type  go to state 138


State 118

    9 def: T_id mulpar ':' type '=' . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 139
    unop    go to state 56


State 119

   29 par: '(' T_id ':' . type ')'

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    type  go to state 140


State 120

   25 constr: T_Id "of" type . multype
   36 type: type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 116
    "->"   shift, and go to state 117

    $default  reduce using rule 26 (multype)

    multype  go to state 141


State 121

   23 mulconstr: mulconstr '|' . constr

    T_Id  shift, and go to state 28

    constr  go to state 142


State 122

   61 expr: "begin" expr "end" .

    $default  reduce using rule 61 (expr)


State 123

   57 expr: "dim" T_integer T_id .

    $default  reduce using rule 57 (expr)


State 124

   65 expr: "for" T_id '=' . expr "to" expr "do" expr "done"
   66     | "for" T_id '=' . expr "downto" expr "do" expr "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 143
    unop    go to state 56


State 125

   62 expr: "if" expr "then" . expr
   63     | "if" expr "then" . expr "else" expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 144
    unop    go to state 56


State 126

   67 expr: "match" expr "with" . clause mulclause "end"

    "false"      shift, and go to state 145
    "true"       shift, and go to state 146
    '+'          shift, and go to state 147
    '-'          shift, and go to state 148
    "+."         shift, and go to state 149
    "-."         shift, and go to state 150
    T_Id         shift, and go to state 151
    T_id         shift, and go to state 152
    T_integer    shift, and go to state 153
    T_real       shift, and go to state 154
    T_character  shift, and go to state 155
    '('          shift, and go to state 156

    clause   go to state 157
    pattern  go to state 158


State 127

   64 expr: "while" expr "do" . expr "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 159
    unop    go to state 56


State 128

   52 expr: expr . binop expr
   69 mulexpr2: mulexpr2 expr .

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    "mod"     [reduce using rule 69 (mulexpr2)]
    ';'       [reduce using rule 69 (mulexpr2)]
    ":="      [reduce using rule 69 (mulexpr2)]
    "||"      [reduce using rule 69 (mulexpr2)]
    "&&"      [reduce using rule 69 (mulexpr2)]
    '='       [reduce using rule 69 (mulexpr2)]
    "<>"      [reduce using rule 69 (mulexpr2)]
    '<'       [reduce using rule 69 (mulexpr2)]
    '>'       [reduce using rule 69 (mulexpr2)]
    "<="      [reduce using rule 69 (mulexpr2)]
    ">="      [reduce using rule 69 (mulexpr2)]
    "=="      [reduce using rule 69 (mulexpr2)]
    "!="      [reduce using rule 69 (mulexpr2)]
    '+'       [reduce using rule 69 (mulexpr2)]
    '-'       [reduce using rule 69 (mulexpr2)]
    "+."      [reduce using rule 69 (mulexpr2)]
    "-."      [reduce using rule 69 (mulexpr2)]
    '*'       [reduce using rule 69 (mulexpr2)]
    '/'       [reduce using rule 69 (mulexpr2)]
    "*."      [reduce using rule 69 (mulexpr2)]
    "/."      [reduce using rule 69 (mulexpr2)]
    "**"      [reduce using rule 69 (mulexpr2)]
    $default  reduce using rule 69 (mulexpr2)

    binop  go to state 111


State 129

   52 expr: expr . binop expr
   55     | T_id '[' expr . mulexpr ']'

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    $default  reduce using rule 16 (mulexpr)

    mulexpr  go to state 160
    binop    go to state 111


State 130

   50 expr: '(' expr ')' .

    $default  reduce using rule 50 (expr)


State 131

   52 expr: expr . binop expr
   60     | letdef "in" expr .

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    "mod"     [reduce using rule 60 (expr)]
    $default  reduce using rule 60 (expr)

    binop  go to state 111


State 132

   12 def: "mutable" T_id '[' expr mulexpr ']' .
   13    | "mutable" T_id '[' expr mulexpr ']' . ':' type

    ':'  shift, and go to state 161

    $default  reduce using rule 12 (def)


State 133

   17 mulexpr: mulexpr ',' . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 162
    unop    go to state 56


State 134

   52 expr: expr . binop expr
   52     | expr binop expr .

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    "mod"     [reduce using rule 52 (expr)]
    ';'       [reduce using rule 52 (expr)]
    ":="      [reduce using rule 52 (expr)]
    "||"      [reduce using rule 52 (expr)]
    "&&"      [reduce using rule 52 (expr)]
    '='       [reduce using rule 52 (expr)]
    "<>"      [reduce using rule 52 (expr)]
    '<'       [reduce using rule 52 (expr)]
    '>'       [reduce using rule 52 (expr)]
    "<="      [reduce using rule 52 (expr)]
    ">="      [reduce using rule 52 (expr)]
    "=="      [reduce using rule 52 (expr)]
    "!="      [reduce using rule 52 (expr)]
    '+'       [reduce using rule 52 (expr)]
    '-'       [reduce using rule 52 (expr)]
    "+."      [reduce using rule 52 (expr)]
    "-."      [reduce using rule 52 (expr)]
    '*'       [reduce using rule 52 (expr)]
    '/'       [reduce using rule 52 (expr)]
    "*."      [reduce using rule 52 (expr)]
    "/."      [reduce using rule 52 (expr)]
    "**"      [reduce using rule 52 (expr)]
    $default  reduce using rule 52 (expr)

    binop  go to state 111


State 135

   36 type: type . "->" type
   37     | type . "ref"
   38     | "array" "of" type .

    "ref"  shift, and go to state 116
    "->"   shift, and go to state 117

    "ref"     [reduce using rule 38 (type)]
    "->"      [reduce using rule 38 (type)]
    $default  reduce using rule 38 (type)


State 136

   39 type: "array" '[' '*' . muldim ']' "of" type

    $default  reduce using rule 41 (muldim)

    muldim  go to state 163


State 137

   35 type: '(' type ')' .

    $default  reduce using rule 35 (type)


State 138

   36 type: type . "->" type
   36     | type "->" type .
   37     | type . "ref"

    "ref"  shift, and go to state 116
    "->"   shift, and go to state 117

    "ref"     [reduce using rule 36 (type)]
    "->"      [reduce using rule 36 (type)]
    $default  reduce using rule 36 (type)


State 139

    9 def: T_id mulpar ':' type '=' expr .
   52 expr: expr . binop expr

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    $default  reduce using rule 9 (def)

    binop  go to state 111


State 140

   29 par: '(' T_id ':' type . ')'
   36 type: type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 116
    ')'    shift, and go to state 164
    "->"   shift, and go to state 117


State 141

   25 constr: T_Id "of" type multype .
   27 multype: multype . type

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    $default  reduce using rule 25 (constr)

    type  go to state 165


State 142

   23 mulconstr: mulconstr '|' constr .

    $default  reduce using rule 23 (mulconstr)


State 143

   52 expr: expr . binop expr
   65     | "for" T_id '=' expr . "to" expr "do" expr "done"
   66     | "for" T_id '=' expr . "downto" expr "do" expr "done"

    "downto"  shift, and go to state 166
    "mod"     shift, and go to state 88
    "to"      shift, and go to state 167
    ';'       shift, and go to state 89
    ":="      shift, and go to state 90
    "||"      shift, and go to state 91
    "&&"      shift, and go to state 92
    '='       shift, and go to state 93
    "<>"      shift, and go to state 94
    '<'       shift, and go to state 95
    '>'       shift, and go to state 96
    "<="      shift, and go to state 97
    ">="      shift, and go to state 98
    "=="      shift, and go to state 99
    "!="      shift, and go to state 100
    '+'       shift, and go to state 101
    '-'       shift, and go to state 102
    "+."      shift, and go to state 103
    "-."      shift, and go to state 104
    '*'       shift, and go to state 105
    '/'       shift, and go to state 106
    "*."      shift, and go to state 107
    "/."      shift, and go to state 108
    "**"      shift, and go to state 109

    binop  go to state 111


State 144

   52 expr: expr . binop expr
   62     | "if" expr "then" expr .
   63     | "if" expr "then" expr . "else" expr

    "else"  shift, and go to state 168
    "mod"   shift, and go to state 88
    ":="    shift, and go to state 90
    "||"    shift, and go to state 91
    "&&"    shift, and go to state 92
    '='     shift, and go to state 93
    "<>"    shift, and go to state 94
    '<'     shift, and go to state 95
    '>'     shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    '+'     shift, and go to state 101
    '-'     shift, and go to state 102
    "+."    shift, and go to state 103
    "-."    shift, and go to state 104
    '*'     shift, and go to state 105
    '/'     shift, and go to state 106
    "*."    shift, and go to state 107
    "/."    shift, and go to state 108
    "**"    shift, and go to state 109

    "else"    [reduce using rule 62 (expr)]
    "mod"     [reduce using rule 62 (expr)]
    $default  reduce using rule 62 (expr)

    binop  go to state 111


State 145

  109 pattern: "false" .

    $default  reduce using rule 109 (pattern)


State 146

  108 pattern: "true" .

    $default  reduce using rule 108 (pattern)


State 147

  102 pattern: '+' . T_integer

    T_integer  shift, and go to state 169


State 148

  103 pattern: '-' . T_integer

    T_integer  shift, and go to state 170


State 149

  105 pattern: "+." . T_real

    T_real  shift, and go to state 171


State 150

  106 pattern: "-." . T_real

    T_real  shift, and go to state 172


State 151

  112 pattern: T_Id . mulpat

    $default  reduce using rule 113 (mulpat)

    mulpat  go to state 173


State 152

  110 pattern: T_id .

    $default  reduce using rule 110 (pattern)


State 153

  101 pattern: T_integer .

    $default  reduce using rule 101 (pattern)


State 154

  104 pattern: T_real .

    $default  reduce using rule 104 (pattern)


State 155

  107 pattern: T_character .

    $default  reduce using rule 107 (pattern)


State 156

  111 pattern: '(' . pattern ')'

    "false"      shift, and go to state 145
    "true"       shift, and go to state 146
    '+'          shift, and go to state 147
    '-'          shift, and go to state 148
    "+."         shift, and go to state 149
    "-."         shift, and go to state 150
    T_Id         shift, and go to state 151
    T_id         shift, and go to state 152
    T_integer    shift, and go to state 153
    T_real       shift, and go to state 154
    T_character  shift, and go to state 155
    '('          shift, and go to state 156

    pattern  go to state 174


State 157

   67 expr: "match" expr "with" clause . mulclause "end"

    $default  reduce using rule 70 (mulclause)

    mulclause  go to state 175


State 158

  100 clause: pattern . "->" expr

    "->"  shift, and go to state 176


State 159

   52 expr: expr . binop expr
   64     | "while" expr "do" expr . "done"

    "done"  shift, and go to state 177
    "mod"   shift, and go to state 88
    ';'     shift, and go to state 89
    ":="    shift, and go to state 90
    "||"    shift, and go to state 91
    "&&"    shift, and go to state 92
    '='     shift, and go to state 93
    "<>"    shift, and go to state 94
    '<'     shift, and go to state 95
    '>'     shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    '+'     shift, and go to state 101
    '-'     shift, and go to state 102
    "+."    shift, and go to state 103
    "-."    shift, and go to state 104
    '*'     shift, and go to state 105
    '/'     shift, and go to state 106
    "*."    shift, and go to state 107
    "/."    shift, and go to state 108
    "**"    shift, and go to state 109

    binop  go to state 111


State 160

   17 mulexpr: mulexpr . ',' expr
   55 expr: T_id '[' expr mulexpr . ']'

    ']'  shift, and go to state 178
    ','  shift, and go to state 133


State 161

   13 def: "mutable" T_id '[' expr mulexpr ']' ':' . type

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    type  go to state 179


State 162

   17 mulexpr: mulexpr ',' expr .
   52 expr: expr . binop expr

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    $default  reduce using rule 17 (mulexpr)

    binop  go to state 111


State 163

   39 type: "array" '[' '*' muldim . ']' "of" type
   42 muldim: muldim . ',' '*'

    ']'  shift, and go to state 180
    ','  shift, and go to state 181


State 164

   29 par: '(' T_id ':' type ')' .

    $default  reduce using rule 29 (par)


State 165

   27 multype: multype type .
   36 type: type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 116
    "->"   shift, and go to state 117

    $default  reduce using rule 27 (multype)


State 166

   66 expr: "for" T_id '=' expr "downto" . expr "do" expr "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 182
    unop    go to state 56


State 167

   65 expr: "for" T_id '=' expr "to" . expr "do" expr "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 183
    unop    go to state 56


State 168

   63 expr: "if" expr "then" expr "else" . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 184
    unop    go to state 56


State 169

  102 pattern: '+' T_integer .

    $default  reduce using rule 102 (pattern)


State 170

  103 pattern: '-' T_integer .

    $default  reduce using rule 103 (pattern)


State 171

  105 pattern: "+." T_real .

    $default  reduce using rule 105 (pattern)


State 172

  106 pattern: "-." T_real .

    $default  reduce using rule 106 (pattern)


State 173

  112 pattern: T_Id mulpat .
  114 mulpat: mulpat . pattern

    "false"      shift, and go to state 145
    "true"       shift, and go to state 146
    '+'          shift, and go to state 147
    '-'          shift, and go to state 148
    "+."         shift, and go to state 149
    "-."         shift, and go to state 150
    T_Id         shift, and go to state 151
    T_id         shift, and go to state 152
    T_integer    shift, and go to state 153
    T_real       shift, and go to state 154
    T_character  shift, and go to state 155
    '('          shift, and go to state 156

    "false"      [reduce using rule 112 (pattern)]
    "true"       [reduce using rule 112 (pattern)]
    '+'          [reduce using rule 112 (pattern)]
    '-'          [reduce using rule 112 (pattern)]
    "+."         [reduce using rule 112 (pattern)]
    "-."         [reduce using rule 112 (pattern)]
    T_Id         [reduce using rule 112 (pattern)]
    T_id         [reduce using rule 112 (pattern)]
    T_integer    [reduce using rule 112 (pattern)]
    T_real       [reduce using rule 112 (pattern)]
    T_character  [reduce using rule 112 (pattern)]
    '('          [reduce using rule 112 (pattern)]
    $default     reduce using rule 112 (pattern)

    pattern  go to state 185


State 174

  111 pattern: '(' pattern . ')'

    ')'  shift, and go to state 186


State 175

   67 expr: "match" expr "with" clause mulclause . "end"
   71 mulclause: mulclause . '|' clause

    "end"  shift, and go to state 187
    '|'    shift, and go to state 188


State 176

  100 clause: pattern "->" . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 189
    unop    go to state 56


State 177

   64 expr: "while" expr "do" expr "done" .

    $default  reduce using rule 64 (expr)


State 178

   55 expr: T_id '[' expr mulexpr ']' .

    $default  reduce using rule 55 (expr)


State 179

   13 def: "mutable" T_id '[' expr mulexpr ']' ':' type .
   36 type: type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 116
    "->"   shift, and go to state 117

    $default  reduce using rule 13 (def)


State 180

   39 type: "array" '[' '*' muldim ']' . "of" type

    "of"  shift, and go to state 190


State 181

   42 muldim: muldim ',' . '*'

    '*'  shift, and go to state 191


State 182

   52 expr: expr . binop expr
   66     | "for" T_id '=' expr "downto" expr . "do" expr "done"

    "do"   shift, and go to state 192
    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    binop  go to state 111


State 183

   52 expr: expr . binop expr
   65     | "for" T_id '=' expr "to" expr . "do" expr "done"

    "do"   shift, and go to state 193
    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    binop  go to state 111


State 184

   52 expr: expr . binop expr
   63     | "if" expr "then" expr "else" expr .

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    "mod"     [reduce using rule 63 (expr)]
    ';'       [reduce using rule 63 (expr)]
    ":="      [reduce using rule 63 (expr)]
    "||"      [reduce using rule 63 (expr)]
    "&&"      [reduce using rule 63 (expr)]
    '='       [reduce using rule 63 (expr)]
    "<>"      [reduce using rule 63 (expr)]
    '<'       [reduce using rule 63 (expr)]
    '>'       [reduce using rule 63 (expr)]
    "<="      [reduce using rule 63 (expr)]
    ">="      [reduce using rule 63 (expr)]
    "=="      [reduce using rule 63 (expr)]
    "!="      [reduce using rule 63 (expr)]
    '+'       [reduce using rule 63 (expr)]
    '-'       [reduce using rule 63 (expr)]
    "+."      [reduce using rule 63 (expr)]
    "-."      [reduce using rule 63 (expr)]
    '*'       [reduce using rule 63 (expr)]
    '/'       [reduce using rule 63 (expr)]
    "*."      [reduce using rule 63 (expr)]
    "/."      [reduce using rule 63 (expr)]
    "**"      [reduce using rule 63 (expr)]
    $default  reduce using rule 63 (expr)

    binop  go to state 111


State 185

  114 mulpat: mulpat pattern .

    $default  reduce using rule 114 (mulpat)


State 186

  111 pattern: '(' pattern ')' .

    $default  reduce using rule 111 (pattern)


State 187

   67 expr: "match" expr "with" clause mulclause "end" .

    $default  reduce using rule 67 (expr)


State 188

   71 mulclause: mulclause '|' . clause

    "false"      shift, and go to state 145
    "true"       shift, and go to state 146
    '+'          shift, and go to state 147
    '-'          shift, and go to state 148
    "+."         shift, and go to state 149
    "-."         shift, and go to state 150
    T_Id         shift, and go to state 151
    T_id         shift, and go to state 152
    T_integer    shift, and go to state 153
    T_real       shift, and go to state 154
    T_character  shift, and go to state 155
    '('          shift, and go to state 156

    clause   go to state 194
    pattern  go to state 158


State 189

   52 expr: expr . binop expr
  100 clause: pattern "->" expr .

    "mod"  shift, and go to state 88
    ';'    shift, and go to state 89
    ":="   shift, and go to state 90
    "||"   shift, and go to state 91
    "&&"   shift, and go to state 92
    '='    shift, and go to state 93
    "<>"   shift, and go to state 94
    '<'    shift, and go to state 95
    '>'    shift, and go to state 96
    "<="   shift, and go to state 97
    ">="   shift, and go to state 98
    "=="   shift, and go to state 99
    "!="   shift, and go to state 100
    '+'    shift, and go to state 101
    '-'    shift, and go to state 102
    "+."   shift, and go to state 103
    "-."   shift, and go to state 104
    '*'    shift, and go to state 105
    '/'    shift, and go to state 106
    "*."   shift, and go to state 107
    "/."   shift, and go to state 108
    "**"   shift, and go to state 109

    $default  reduce using rule 100 (clause)

    binop  go to state 111


State 190

   39 type: "array" '[' '*' muldim ']' "of" . type

    "array"  shift, and go to state 57
    "bool"   shift, and go to state 58
    "char"   shift, and go to state 59
    "float"  shift, and go to state 60
    "int"    shift, and go to state 61
    "unit"   shift, and go to state 62
    T_id     shift, and go to state 63
    '('      shift, and go to state 64

    type  go to state 195


State 191

   42 muldim: muldim ',' '*' .

    $default  reduce using rule 42 (muldim)


State 192

   66 expr: "for" T_id '=' expr "downto" expr "do" . expr "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 196
    unop    go to state 56


State 193

   65 expr: "for" T_id '=' expr "to" expr "do" . expr "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    '+'          shift, and go to state 42
    '-'          shift, and go to state 43
    "+."         shift, and go to state 44
    "-."         shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 197
    unop    go to state 56


State 194

   71 mulclause: mulclause '|' clause .

    $default  reduce using rule 71 (mulclause)


State 195

   36 type: type . "->" type
   37     | type . "ref"
   39     | "array" '[' '*' muldim ']' "of" type .

    "ref"  shift, and go to state 116
    "->"   shift, and go to state 117

    "ref"     [reduce using rule 39 (type)]
    "->"      [reduce using rule 39 (type)]
    $default  reduce using rule 39 (type)


State 196

   52 expr: expr . binop expr
   66     | "for" T_id '=' expr "downto" expr "do" expr . "done"

    "done"  shift, and go to state 198
    "mod"   shift, and go to state 88
    ';'     shift, and go to state 89
    ":="    shift, and go to state 90
    "||"    shift, and go to state 91
    "&&"    shift, and go to state 92
    '='     shift, and go to state 93
    "<>"    shift, and go to state 94
    '<'     shift, and go to state 95
    '>'     shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    '+'     shift, and go to state 101
    '-'     shift, and go to state 102
    "+."    shift, and go to state 103
    "-."    shift, and go to state 104
    '*'     shift, and go to state 105
    '/'     shift, and go to state 106
    "*."    shift, and go to state 107
    "/."    shift, and go to state 108
    "**"    shift, and go to state 109

    binop  go to state 111


State 197

   52 expr: expr . binop expr
   65     | "for" T_id '=' expr "to" expr "do" expr . "done"

    "done"  shift, and go to state 199
    "mod"   shift, and go to state 88
    ';'     shift, and go to state 89
    ":="    shift, and go to state 90
    "||"    shift, and go to state 91
    "&&"    shift, and go to state 92
    '='     shift, and go to state 93
    "<>"    shift, and go to state 94
    '<'     shift, and go to state 95
    '>'     shift, and go to state 96
    "<="    shift, and go to state 97
    ">="    shift, and go to state 98
    "=="    shift, and go to state 99
    "!="    shift, and go to state 100
    '+'     shift, and go to state 101
    '-'     shift, and go to state 102
    "+."    shift, and go to state 103
    "-."    shift, and go to state 104
    '*'     shift, and go to state 105
    '/'     shift, and go to state 106
    "*."    shift, and go to state 107
    "/."    shift, and go to state 108
    "**"    shift, and go to state 109

    binop  go to state 111


State 198

   66 expr: "for" T_id '=' expr "downto" expr "do" expr "done" .

    $default  reduce using rule 66 (expr)


State 199

   65 expr: "for" T_id '=' expr "to" expr "do" expr "done" .

    $default  reduce using rule 65 (expr)
