State 47 conflicts: 4 shift/reduce
State 48 conflicts: 4 shift/reduce
State 162 conflicts: 4 shift/reduce
State 165 conflicts: 4 shift/reduce
State 180 conflicts: 1 shift/reduce
State 227 conflicts: 1 shift/reduce
State 234 conflicts: 7 reduce/reduce
State 239 conflicts: 7 reduce/reduce
State 241 conflicts: 4 shift/reduce, 7 reduce/reduce
State 242 conflicts: 4 shift/reduce, 7 reduce/reduce
State 243 conflicts: 7 reduce/reduce
State 244 conflicts: 7 reduce/reduce
State 245 conflicts: 7 reduce/reduce
State 246 conflicts: 7 reduce/reduce
State 268 conflicts: 7 reduce/reduce
State 271 conflicts: 7 reduce/reduce
State 273 conflicts: 7 reduce/reduce
State 286 conflicts: 7 reduce/reduce
State 289 conflicts: 7 reduce/reduce
State 300 conflicts: 7 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program letdef
    3        | program typedef

    4 letdef: "let" def muldef
    5       | "let" "rec" def muldef

    6 muldef: %empty
    7       | muldef "and" def

    8 def: T_id mulpar '=' expr
    9    | T_id mulpar ':' type '=' expr
   10    | "mutable" T_id
   11    | "mutable" T_id ':' type
   12    | "mutable" T_id '[' expr mulexpr ']'
   13    | "mutable" T_id '[' expr mulexpr ']' ':' type

   14 mulpar: %empty
   15       | mulpar par

   16 mulexpr: %empty
   17        | mulexpr ',' expr

   18 typedef: "type" tdef multdef

   19 multdef: %empty
   20        | multdef "and" tdef

   21 tdef: T_id '=' constr mulconstr

   22 mulconstr: %empty
   23          | mulconstr '|' constr

   24 constr: T_Id
   25       | T_Id "of" type multype

   26 multype: %empty
   27        | multype type

   28 par: T_id
   29    | '(' T_id ':' type ')'

   30 type: type1
   31     | type "->" type1

   32 type1: type2
   33      | type1 "ref"

   34 type2: "unit"
   35      | "int"
   36      | "char"
   37      | "bool"
   38      | "float"
   39      | T_id
   40      | '(' type ')'
   41      | "array" "of" type2
   42      | "array" '[' '*' muldim ']' "of" type2

   43 muldim: %empty
   44       | muldim ',' '*'

   45 expr: expr1
   46     | expr binop expr1

   47 expr1: T_integer
   48      | T_real
   49      | T_character
   50      | T_string
   51      | "true"
   52      | "false"
   53      | '(' ')'
   54      | '(' expr ')'
   55      | unop expr1
   56      | T_id
   57      | T_Id
   58      | T_id expr3 mulexpr2
   59      | T_Id expr3 mulexpr2
   60      | T_id '[' expr mulexpr ']'
   61      | "dim" T_id
   62      | "dim" T_integer T_id
   63      | "new" type
   64      | "delete" expr1
   65      | letdef "in" expr1
   66      | "begin" expr1 "end"
   67      | "if" expr1 "then" expr1
   68      | "if" expr1 "then" expr1 "else" expr1
   69      | "while" expr1 "do" expr1 "done"
   70      | "for" T_id '=' expr1 "to" expr1 "do" expr1 "done"
   71      | "for" T_id '=' expr1 "downto" expr1 "do" expr1 "done"
   72      | "match" expr1 "with" clause mulclause "end"

   73 expr3: T_integer
   74      | T_real
   75      | T_character
   76      | T_string
   77      | "true"
   78      | "false"
   79      | '(' ')'
   80      | '(' expr ')'
   81      | unop expr3
   82      | T_id
   83      | T_Id
   84      | T_id '[' expr mulexpr ']'
   85      | "dim" T_id
   86      | "dim" T_integer T_id
   87      | "new" type
   88      | "delete" expr3
   89      | '(' letdef "in" expr3 ')'
   90      | "begin" expr3 "end"
   91      | "if" expr3 "then" expr3
   92      | "if" expr3 "then" expr3 "else" expr3
   93      | "while" expr3 "do" expr3 "done"
   94      | "for" T_id '=' expr3 "to" expr3 "do" expr3 "done"
   95      | "for" T_id '=' expr3 "downto" expr3 "do" expr3 "done"
   96      | "match" expr3 "with" clause mulclause "end"

   97 mulexpr2: %empty
   98         | mulexpr2 expr3

   99 mulclause: %empty
  100          | mulclause '|' clause

  101 unop: '+'
  102     | '-'
  103     | "+."
  104     | "-."
  105     | '!'
  106     | "not"

  107 binop: '+'
  108      | '-'
  109      | '*'
  110      | '/'
  111      | "+."
  112      | "-."
  113      | "*."
  114      | "/."
  115      | "mod"
  116      | "**"
  117      | '='
  118      | "<>"
  119      | '<'
  120      | '>'
  121      | "<="
  122      | ">="
  123      | "=="
  124      | "!="
  125      | "&&"
  126      | "||"
  127      | ';'
  128      | ":="

  129 clause: pattern "->" expr

  130 pattern: pattern1
  131        | T_Id pattern1 mulpat

  132 pattern1: T_integer
  133         | '+' T_integer
  134         | '-' T_integer
  135         | T_real
  136         | "+." T_real
  137         | "-." T_real
  138         | T_character
  139         | "true"
  140         | "false"
  141         | T_id
  142         | '(' pattern ')'
  143         | T_Id

  144 mulpat: %empty
  145       | mulpat pattern1


Terminals, with rules where they appear

$end (0) 0
'!' (33) 105
'(' (40) 29 40 53 54 79 80 89 142
')' (41) 29 40 53 54 79 80 89 142
'*' (42) 42 44 109
'+' (43) 101 107 133
',' (44) 17 44
'-' (45) 102 108 134
'/' (47) 110
':' (58) 9 11 13 29
';' (59) 127
'<' (60) 119
'=' (61) 8 9 21 70 71 94 95 117
'>' (62) 120
'[' (91) 12 13 42 60 84
']' (93) 12 13 42 60 84
'|' (124) 23 100
error (256)
"and" (258) 7 20
"array" (259) 41 42
"begin" (260) 66 90
"bool" (261) 37
"char" (262) 36
"delete" (263) 64 88
"dim" (264) 61 62 85 86
"do" (265) 69 70 71 93 94 95
"done" (266) 69 70 71 93 94 95
"downto" (267) 71 95
"else" (268) 68 92
"end" (269) 66 72 90 96
"false" (270) 52 78 140
"float" (271) 38
"for" (272) 70 71 94 95
"if" (273) 67 68 91 92
"in" (274) 65 89
"int" (275) 35
"let" (276) 4 5
"match" (277) 72 96
"mod" (278) 115
"mutable" (279) 10 11 12 13
"new" (280) 63 87
"not" (281) 106
"of" (282) 25 41 42
"rec" (283) 5
"ref" (284) 33
"then" (285) 67 68 91 92
"to" (286) 70 94
"true" (287) 51 77 139
"type" (288) 18
"unit" (289) 34
"while" (290) 69 93
"with" (291) 72 96
"->" (292) 31 129
"+." (293) 103 111 136
"-." (294) 104 112 137
"*." (295) 113
"/." (296) 114
"&&" (297) 125
"**" (298) 116
"||" (299) 126
"<>" (300) 118
"<=" (301) 121
">=" (302) 122
"==" (303) 123
"!=" (304) 124
":=" (305) 128
T_Id (306) 24 25 57 59 83 131 143
T_id (307) 8 9 10 11 12 13 21 28 29 39 56 58 60 61 62 70 71 82 84 85
    86 94 95 141
T_integer (308) 47 62 73 86 132 133 134
T_real (309) 48 74 135 136 137
T_character (310) 49 75 138
T_string (311) 50 76


Nonterminals, with rules where they appear

$accept (73)
    on left: 0
program (74)
    on left: 1 2 3, on right: 0 2 3
letdef (75)
    on left: 4 5, on right: 2 65 89
muldef (76)
    on left: 6 7, on right: 4 5 7
def (77)
    on left: 8 9 10 11 12 13, on right: 4 5 7
mulpar (78)
    on left: 14 15, on right: 8 9 15
mulexpr (79)
    on left: 16 17, on right: 12 13 17 60 84
typedef (80)
    on left: 18, on right: 3
multdef (81)
    on left: 19 20, on right: 18 20
tdef (82)
    on left: 21, on right: 18 20
mulconstr (83)
    on left: 22 23, on right: 21 23
constr (84)
    on left: 24 25, on right: 21 23
multype (85)
    on left: 26 27, on right: 25 27
par (86)
    on left: 28 29, on right: 15
type (87)
    on left: 30 31, on right: 9 11 13 25 27 29 31 40 63 87
type1 (88)
    on left: 32 33, on right: 30 31 33
type2 (89)
    on left: 34 35 36 37 38 39 40 41 42, on right: 32 41 42
muldim (90)
    on left: 43 44, on right: 42 44
expr (91)
    on left: 45 46, on right: 8 9 12 13 17 46 54 60 80 84 129
expr1 (92)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 70 71 72, on right: 45 46 55 64 65 66 67 68 69 70
    71 72
expr3 (93)
    on left: 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
    91 92 93 94 95 96, on right: 58 59 81 88 89 90 91 92 93 94 95 96
    98
mulexpr2 (94)
    on left: 97 98, on right: 58 59 98
mulclause (95)
    on left: 99 100, on right: 72 96 100
unop (96)
    on left: 101 102 103 104 105 106, on right: 55 81
binop (97)
    on left: 107 108 109 110 111 112 113 114 115 116 117 118 119 120
    121 122 123 124 125 126 127 128, on right: 46
clause (98)
    on left: 129, on right: 72 96 100
pattern (99)
    on left: 130 131, on right: 129 142
pattern1 (100)
    on left: 132 133 134 135 136 137 138 139 140 141 142 143, on right:
    130 131 145
mulpat (101)
    on left: 144 145, on right: 131 145


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . letdef
    3        | program . typedef

    $end    shift, and go to state 2
    "let"   shift, and go to state 3
    "type"  shift, and go to state 4

    letdef   go to state 5
    typedef  go to state 6


State 2

    0 $accept: program $end .

    $default  accept


State 3

    4 letdef: "let" . def muldef
    5       | "let" . "rec" def muldef

    "mutable"  shift, and go to state 7
    "rec"      shift, and go to state 8
    T_id       shift, and go to state 9

    def  go to state 10


State 4

   18 typedef: "type" . tdef multdef

    T_id  shift, and go to state 11

    tdef  go to state 12


State 5

    2 program: program letdef .

    $default  reduce using rule 2 (program)


State 6

    3 program: program typedef .

    $default  reduce using rule 3 (program)


State 7

   10 def: "mutable" . T_id
   11    | "mutable" . T_id ':' type
   12    | "mutable" . T_id '[' expr mulexpr ']'
   13    | "mutable" . T_id '[' expr mulexpr ']' ':' type

    T_id  shift, and go to state 13


State 8

    5 letdef: "let" "rec" . def muldef

    "mutable"  shift, and go to state 7
    T_id       shift, and go to state 9

    def  go to state 14


State 9

    8 def: T_id . mulpar '=' expr
    9    | T_id . mulpar ':' type '=' expr

    $default  reduce using rule 14 (mulpar)

    mulpar  go to state 15


State 10

    4 letdef: "let" def . muldef

    $default  reduce using rule 6 (muldef)

    muldef  go to state 16


State 11

   21 tdef: T_id . '=' constr mulconstr

    '='  shift, and go to state 17


State 12

   18 typedef: "type" tdef . multdef

    $default  reduce using rule 19 (multdef)

    multdef  go to state 18


State 13

   10 def: "mutable" T_id .
   11    | "mutable" T_id . ':' type
   12    | "mutable" T_id . '[' expr mulexpr ']'
   13    | "mutable" T_id . '[' expr mulexpr ']' ':' type

    '['  shift, and go to state 19
    ':'  shift, and go to state 20

    $default  reduce using rule 10 (def)


State 14

    5 letdef: "let" "rec" def . muldef

    $default  reduce using rule 6 (muldef)

    muldef  go to state 21


State 15

    8 def: T_id mulpar . '=' expr
    9    | T_id mulpar . ':' type '=' expr
   15 mulpar: mulpar . par

    '='   shift, and go to state 22
    T_id  shift, and go to state 23
    ':'   shift, and go to state 24
    '('   shift, and go to state 25

    par  go to state 26


State 16

    4 letdef: "let" def muldef .
    7 muldef: muldef . "and" def

    "and"  shift, and go to state 27

    $default  reduce using rule 4 (letdef)


State 17

   21 tdef: T_id '=' . constr mulconstr

    T_Id  shift, and go to state 28

    constr  go to state 29


State 18

   18 typedef: "type" tdef multdef .
   20 multdef: multdef . "and" tdef

    "and"  shift, and go to state 30

    $default  reduce using rule 18 (typedef)


State 19

   12 def: "mutable" T_id '[' . expr mulexpr ']'
   13    | "mutable" T_id '[' . expr mulexpr ']' ':' type

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 55
    expr1   go to state 56
    unop    go to state 57


State 20

   11 def: "mutable" T_id ':' . type

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type   go to state 66
    type1  go to state 67
    type2  go to state 68


State 21

    5 letdef: "let" "rec" def muldef .
    7 muldef: muldef . "and" def

    "and"  shift, and go to state 27

    $default  reduce using rule 5 (letdef)


State 22

    8 def: T_id mulpar '=' . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 69
    expr1   go to state 56
    unop    go to state 57


State 23

   28 par: T_id .

    $default  reduce using rule 28 (par)


State 24

    9 def: T_id mulpar ':' . type '=' expr

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type   go to state 70
    type1  go to state 67
    type2  go to state 68


State 25

   29 par: '(' . T_id ':' type ')'

    T_id  shift, and go to state 71


State 26

   15 mulpar: mulpar par .

    $default  reduce using rule 15 (mulpar)


State 27

    7 muldef: muldef "and" . def

    "mutable"  shift, and go to state 7
    T_id       shift, and go to state 9

    def  go to state 72


State 28

   24 constr: T_Id .
   25       | T_Id . "of" type multype

    "of"  shift, and go to state 73

    $default  reduce using rule 24 (constr)


State 29

   21 tdef: T_id '=' constr . mulconstr

    $default  reduce using rule 22 (mulconstr)

    mulconstr  go to state 74


State 30

   20 multdef: multdef "and" . tdef

    T_id  shift, and go to state 11

    tdef  go to state 75


State 31

   66 expr1: "begin" . expr1 "end"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 76
    unop    go to state 57


State 32

   64 expr1: "delete" . expr1

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 77
    unop    go to state 57


State 33

   61 expr1: "dim" . T_id
   62      | "dim" . T_integer T_id

    T_id       shift, and go to state 78
    T_integer  shift, and go to state 79


State 34

   52 expr1: "false" .

    $default  reduce using rule 52 (expr1)


State 35

   70 expr1: "for" . T_id '=' expr1 "to" expr1 "do" expr1 "done"
   71      | "for" . T_id '=' expr1 "downto" expr1 "do" expr1 "done"

    T_id  shift, and go to state 80


State 36

   67 expr1: "if" . expr1 "then" expr1
   68      | "if" . expr1 "then" expr1 "else" expr1

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 81
    unop    go to state 57


State 37

   72 expr1: "match" . expr1 "with" clause mulclause "end"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 82
    unop    go to state 57


State 38

   63 expr1: "new" . type

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type   go to state 83
    type1  go to state 67
    type2  go to state 68


State 39

  106 unop: "not" .

    $default  reduce using rule 106 (unop)


State 40

   51 expr1: "true" .

    $default  reduce using rule 51 (expr1)


State 41

   69 expr1: "while" . expr1 "do" expr1 "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 84
    unop    go to state 57


State 42

  103 unop: "+." .

    $default  reduce using rule 103 (unop)


State 43

  104 unop: "-." .

    $default  reduce using rule 104 (unop)


State 44

  101 unop: '+' .

    $default  reduce using rule 101 (unop)


State 45

  102 unop: '-' .

    $default  reduce using rule 102 (unop)


State 46

  105 unop: '!' .

    $default  reduce using rule 105 (unop)


State 47

   57 expr1: T_Id .
   59      | T_Id . expr3 mulexpr2

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    "+."      [reduce using rule 57 (expr1)]
    "-."      [reduce using rule 57 (expr1)]
    '+'       [reduce using rule 57 (expr1)]
    '-'       [reduce using rule 57 (expr1)]
    $default  reduce using rule 57 (expr1)

    expr3  go to state 102
    unop   go to state 103


State 48

   56 expr1: T_id .
   58      | T_id . expr3 mulexpr2
   60      | T_id . '[' expr mulexpr ']'

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    '['          shift, and go to state 104
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    "+."      [reduce using rule 56 (expr1)]
    "-."      [reduce using rule 56 (expr1)]
    '+'       [reduce using rule 56 (expr1)]
    '-'       [reduce using rule 56 (expr1)]
    $default  reduce using rule 56 (expr1)

    expr3  go to state 105
    unop   go to state 103


State 49

   47 expr1: T_integer .

    $default  reduce using rule 47 (expr1)


State 50

   48 expr1: T_real .

    $default  reduce using rule 48 (expr1)


State 51

   49 expr1: T_character .

    $default  reduce using rule 49 (expr1)


State 52

   50 expr1: T_string .

    $default  reduce using rule 50 (expr1)


State 53

   53 expr1: '(' . ')'
   54      | '(' . expr ')'

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53
    ')'          shift, and go to state 106

    letdef  go to state 54
    expr    go to state 107
    expr1   go to state 56
    unop    go to state 57


State 54

   65 expr1: letdef . "in" expr1

    "in"  shift, and go to state 108


State 55

   12 def: "mutable" T_id '[' expr . mulexpr ']'
   13    | "mutable" T_id '[' expr . mulexpr ']' ':' type
   46 expr: expr . binop expr1

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130

    $default  reduce using rule 16 (mulexpr)

    mulexpr  go to state 131
    binop    go to state 132


State 56

   45 expr: expr1 .

    $default  reduce using rule 45 (expr)


State 57

   55 expr1: unop . expr1

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 133
    unop    go to state 57


State 58

   41 type2: "array" . "of" type2
   42      | "array" . '[' '*' muldim ']' "of" type2

    "of"  shift, and go to state 134
    '['   shift, and go to state 135


State 59

   37 type2: "bool" .

    $default  reduce using rule 37 (type2)


State 60

   36 type2: "char" .

    $default  reduce using rule 36 (type2)


State 61

   38 type2: "float" .

    $default  reduce using rule 38 (type2)


State 62

   35 type2: "int" .

    $default  reduce using rule 35 (type2)


State 63

   34 type2: "unit" .

    $default  reduce using rule 34 (type2)


State 64

   39 type2: T_id .

    $default  reduce using rule 39 (type2)


State 65

   40 type2: '(' . type ')'

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type   go to state 136
    type1  go to state 67
    type2  go to state 68


State 66

   11 def: "mutable" T_id ':' type .
   31 type: type . "->" type1

    "->"  shift, and go to state 137

    $default  reduce using rule 11 (def)


State 67

   30 type: type1 .
   33 type1: type1 . "ref"

    "ref"  shift, and go to state 138

    $default  reduce using rule 30 (type)


State 68

   32 type1: type2 .

    $default  reduce using rule 32 (type1)


State 69

    8 def: T_id mulpar '=' expr .
   46 expr: expr . binop expr1

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130

    $default  reduce using rule 8 (def)

    binop  go to state 132


State 70

    9 def: T_id mulpar ':' type . '=' expr
   31 type: type . "->" type1

    "->"  shift, and go to state 137
    '='   shift, and go to state 139


State 71

   29 par: '(' T_id . ':' type ')'

    ':'  shift, and go to state 140


State 72

    7 muldef: muldef "and" def .

    $default  reduce using rule 7 (muldef)


State 73

   25 constr: T_Id "of" . type multype

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type   go to state 141
    type1  go to state 67
    type2  go to state 68


State 74

   21 tdef: T_id '=' constr mulconstr .
   23 mulconstr: mulconstr . '|' constr

    '|'  shift, and go to state 142

    $default  reduce using rule 21 (tdef)


State 75

   20 multdef: multdef "and" tdef .

    $default  reduce using rule 20 (multdef)


State 76

   66 expr1: "begin" expr1 . "end"

    "end"  shift, and go to state 143


State 77

   64 expr1: "delete" expr1 .

    $default  reduce using rule 64 (expr1)


State 78

   61 expr1: "dim" T_id .

    $default  reduce using rule 61 (expr1)


State 79

   62 expr1: "dim" T_integer . T_id

    T_id  shift, and go to state 144


State 80

   70 expr1: "for" T_id . '=' expr1 "to" expr1 "do" expr1 "done"
   71      | "for" T_id . '=' expr1 "downto" expr1 "do" expr1 "done"

    '='  shift, and go to state 145


State 81

   67 expr1: "if" expr1 . "then" expr1
   68      | "if" expr1 . "then" expr1 "else" expr1

    "then"  shift, and go to state 146


State 82

   72 expr1: "match" expr1 . "with" clause mulclause "end"

    "with"  shift, and go to state 147


State 83

   31 type: type . "->" type1
   63 expr1: "new" type .

    "->"  shift, and go to state 137

    $default  reduce using rule 63 (expr1)


State 84

   69 expr1: "while" expr1 . "do" expr1 "done"

    "do"  shift, and go to state 148


State 85

   90 expr3: "begin" . expr3 "end"

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 149
    unop   go to state 103


State 86

   88 expr3: "delete" . expr3

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 150
    unop   go to state 103


State 87

   85 expr3: "dim" . T_id
   86      | "dim" . T_integer T_id

    T_id       shift, and go to state 151
    T_integer  shift, and go to state 152


State 88

   78 expr3: "false" .

    $default  reduce using rule 78 (expr3)


State 89

   94 expr3: "for" . T_id '=' expr3 "to" expr3 "do" expr3 "done"
   95      | "for" . T_id '=' expr3 "downto" expr3 "do" expr3 "done"

    T_id  shift, and go to state 153


State 90

   91 expr3: "if" . expr3 "then" expr3
   92      | "if" . expr3 "then" expr3 "else" expr3

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 154
    unop   go to state 103


State 91

   96 expr3: "match" . expr3 "with" clause mulclause "end"

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 155
    unop   go to state 103


State 92

   87 expr3: "new" . type

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type   go to state 156
    type1  go to state 67
    type2  go to state 68


State 93

   77 expr3: "true" .

    $default  reduce using rule 77 (expr3)


State 94

   93 expr3: "while" . expr3 "do" expr3 "done"

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 157
    unop   go to state 103


State 95

   83 expr3: T_Id .

    $default  reduce using rule 83 (expr3)


State 96

   82 expr3: T_id .
   84      | T_id . '[' expr mulexpr ']'

    '['  shift, and go to state 158

    $default  reduce using rule 82 (expr3)


State 97

   73 expr3: T_integer .

    $default  reduce using rule 73 (expr3)


State 98

   74 expr3: T_real .

    $default  reduce using rule 74 (expr3)


State 99

   75 expr3: T_character .

    $default  reduce using rule 75 (expr3)


State 100

   76 expr3: T_string .

    $default  reduce using rule 76 (expr3)


State 101

   79 expr3: '(' . ')'
   80      | '(' . expr ')'
   89      | '(' . letdef "in" expr3 ')'

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53
    ')'          shift, and go to state 159

    letdef  go to state 160
    expr    go to state 161
    expr1   go to state 56
    unop    go to state 57


State 102

   59 expr1: T_Id expr3 . mulexpr2

    $default  reduce using rule 97 (mulexpr2)

    mulexpr2  go to state 162


State 103

   81 expr3: unop . expr3

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 163
    unop   go to state 103


State 104

   60 expr1: T_id '[' . expr mulexpr ']'

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 164
    expr1   go to state 56
    unop    go to state 57


State 105

   58 expr1: T_id expr3 . mulexpr2

    $default  reduce using rule 97 (mulexpr2)

    mulexpr2  go to state 165


State 106

   53 expr1: '(' ')' .

    $default  reduce using rule 53 (expr1)


State 107

   46 expr: expr . binop expr1
   54 expr1: '(' expr . ')'

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130
    ')'    shift, and go to state 166

    binop  go to state 132


State 108

   65 expr1: letdef "in" . expr1

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 167
    unop    go to state 57


State 109

  115 binop: "mod" .

    $default  reduce using rule 115 (binop)


State 110

  111 binop: "+." .

    $default  reduce using rule 111 (binop)


State 111

  112 binop: "-." .

    $default  reduce using rule 112 (binop)


State 112

  113 binop: "*." .

    $default  reduce using rule 113 (binop)


State 113

  114 binop: "/." .

    $default  reduce using rule 114 (binop)


State 114

  125 binop: "&&" .

    $default  reduce using rule 125 (binop)


State 115

  116 binop: "**" .

    $default  reduce using rule 116 (binop)


State 116

  126 binop: "||" .

    $default  reduce using rule 126 (binop)


State 117

  118 binop: "<>" .

    $default  reduce using rule 118 (binop)


State 118

  121 binop: "<=" .

    $default  reduce using rule 121 (binop)


State 119

  122 binop: ">=" .

    $default  reduce using rule 122 (binop)


State 120

  123 binop: "==" .

    $default  reduce using rule 123 (binop)


State 121

  124 binop: "!=" .

    $default  reduce using rule 124 (binop)


State 122

  128 binop: ":=" .

    $default  reduce using rule 128 (binop)


State 123

  127 binop: ';' .

    $default  reduce using rule 127 (binop)


State 124

  117 binop: '=' .

    $default  reduce using rule 117 (binop)


State 125

  119 binop: '<' .

    $default  reduce using rule 119 (binop)


State 126

  120 binop: '>' .

    $default  reduce using rule 120 (binop)


State 127

  107 binop: '+' .

    $default  reduce using rule 107 (binop)


State 128

  108 binop: '-' .

    $default  reduce using rule 108 (binop)


State 129

  109 binop: '*' .

    $default  reduce using rule 109 (binop)


State 130

  110 binop: '/' .

    $default  reduce using rule 110 (binop)


State 131

   12 def: "mutable" T_id '[' expr mulexpr . ']'
   13    | "mutable" T_id '[' expr mulexpr . ']' ':' type
   17 mulexpr: mulexpr . ',' expr

    ']'  shift, and go to state 168
    ','  shift, and go to state 169


State 132

   46 expr: expr binop . expr1

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 170
    unop    go to state 57


State 133

   55 expr1: unop expr1 .

    $default  reduce using rule 55 (expr1)


State 134

   41 type2: "array" "of" . type2

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type2  go to state 171


State 135

   42 type2: "array" '[' . '*' muldim ']' "of" type2

    '*'  shift, and go to state 172


State 136

   31 type: type . "->" type1
   40 type2: '(' type . ')'

    "->"  shift, and go to state 137
    ')'   shift, and go to state 173


State 137

   31 type: type "->" . type1

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type1  go to state 174
    type2  go to state 68


State 138

   33 type1: type1 "ref" .

    $default  reduce using rule 33 (type1)


State 139

    9 def: T_id mulpar ':' type '=' . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 175
    expr1   go to state 56
    unop    go to state 57


State 140

   29 par: '(' T_id ':' . type ')'

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type   go to state 176
    type1  go to state 67
    type2  go to state 68


State 141

   25 constr: T_Id "of" type . multype
   31 type: type . "->" type1

    "->"  shift, and go to state 137

    $default  reduce using rule 26 (multype)

    multype  go to state 177


State 142

   23 mulconstr: mulconstr '|' . constr

    T_Id  shift, and go to state 28

    constr  go to state 178


State 143

   66 expr1: "begin" expr1 "end" .

    $default  reduce using rule 66 (expr1)


State 144

   62 expr1: "dim" T_integer T_id .

    $default  reduce using rule 62 (expr1)


State 145

   70 expr1: "for" T_id '=' . expr1 "to" expr1 "do" expr1 "done"
   71      | "for" T_id '=' . expr1 "downto" expr1 "do" expr1 "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 179
    unop    go to state 57


State 146

   67 expr1: "if" expr1 "then" . expr1
   68      | "if" expr1 "then" . expr1 "else" expr1

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 180
    unop    go to state 57


State 147

   72 expr1: "match" expr1 "with" . clause mulclause "end"

    "false"      shift, and go to state 181
    "true"       shift, and go to state 182
    "+."         shift, and go to state 183
    "-."         shift, and go to state 184
    '+'          shift, and go to state 185
    '-'          shift, and go to state 186
    T_Id         shift, and go to state 187
    T_id         shift, and go to state 188
    T_integer    shift, and go to state 189
    T_real       shift, and go to state 190
    T_character  shift, and go to state 191
    '('          shift, and go to state 192

    clause    go to state 193
    pattern   go to state 194
    pattern1  go to state 195


State 148

   69 expr1: "while" expr1 "do" . expr1 "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 196
    unop    go to state 57


State 149

   90 expr3: "begin" expr3 . "end"

    "end"  shift, and go to state 197


State 150

   88 expr3: "delete" expr3 .

    $default  reduce using rule 88 (expr3)


State 151

   85 expr3: "dim" T_id .

    $default  reduce using rule 85 (expr3)


State 152

   86 expr3: "dim" T_integer . T_id

    T_id  shift, and go to state 198


State 153

   94 expr3: "for" T_id . '=' expr3 "to" expr3 "do" expr3 "done"
   95      | "for" T_id . '=' expr3 "downto" expr3 "do" expr3 "done"

    '='  shift, and go to state 199


State 154

   91 expr3: "if" expr3 . "then" expr3
   92      | "if" expr3 . "then" expr3 "else" expr3

    "then"  shift, and go to state 200


State 155

   96 expr3: "match" expr3 . "with" clause mulclause "end"

    "with"  shift, and go to state 201


State 156

   31 type: type . "->" type1
   87 expr3: "new" type .

    "->"  shift, and go to state 137

    $default  reduce using rule 87 (expr3)


State 157

   93 expr3: "while" expr3 . "do" expr3 "done"

    "do"  shift, and go to state 202


State 158

   84 expr3: T_id '[' . expr mulexpr ']'

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 203
    expr1   go to state 56
    unop    go to state 57


State 159

   79 expr3: '(' ')' .

    $default  reduce using rule 79 (expr3)


State 160

   65 expr1: letdef . "in" expr1
   89 expr3: '(' letdef . "in" expr3 ')'

    "in"  shift, and go to state 204


State 161

   46 expr: expr . binop expr1
   80 expr3: '(' expr . ')'

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130
    ')'    shift, and go to state 205

    binop  go to state 132


State 162

   59 expr1: T_Id expr3 mulexpr2 .
   98 mulexpr2: mulexpr2 . expr3

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    "+."      [reduce using rule 59 (expr1)]
    "-."      [reduce using rule 59 (expr1)]
    '+'       [reduce using rule 59 (expr1)]
    '-'       [reduce using rule 59 (expr1)]
    $default  reduce using rule 59 (expr1)

    expr3  go to state 206
    unop   go to state 103


State 163

   81 expr3: unop expr3 .

    $default  reduce using rule 81 (expr3)


State 164

   46 expr: expr . binop expr1
   60 expr1: T_id '[' expr . mulexpr ']'

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130

    $default  reduce using rule 16 (mulexpr)

    mulexpr  go to state 207
    binop    go to state 132


State 165

   58 expr1: T_id expr3 mulexpr2 .
   98 mulexpr2: mulexpr2 . expr3

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    "+."      [reduce using rule 58 (expr1)]
    "-."      [reduce using rule 58 (expr1)]
    '+'       [reduce using rule 58 (expr1)]
    '-'       [reduce using rule 58 (expr1)]
    $default  reduce using rule 58 (expr1)

    expr3  go to state 206
    unop   go to state 103


State 166

   54 expr1: '(' expr ')' .

    $default  reduce using rule 54 (expr1)


State 167

   65 expr1: letdef "in" expr1 .

    $default  reduce using rule 65 (expr1)


State 168

   12 def: "mutable" T_id '[' expr mulexpr ']' .
   13    | "mutable" T_id '[' expr mulexpr ']' . ':' type

    ':'  shift, and go to state 208

    $default  reduce using rule 12 (def)


State 169

   17 mulexpr: mulexpr ',' . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 209
    expr1   go to state 56
    unop    go to state 57


State 170

   46 expr: expr binop expr1 .

    $default  reduce using rule 46 (expr)


State 171

   41 type2: "array" "of" type2 .

    $default  reduce using rule 41 (type2)


State 172

   42 type2: "array" '[' '*' . muldim ']' "of" type2

    $default  reduce using rule 43 (muldim)

    muldim  go to state 210


State 173

   40 type2: '(' type ')' .

    $default  reduce using rule 40 (type2)


State 174

   31 type: type "->" type1 .
   33 type1: type1 . "ref"

    "ref"  shift, and go to state 138

    $default  reduce using rule 31 (type)


State 175

    9 def: T_id mulpar ':' type '=' expr .
   46 expr: expr . binop expr1

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130

    $default  reduce using rule 9 (def)

    binop  go to state 132


State 176

   29 par: '(' T_id ':' type . ')'
   31 type: type . "->" type1

    "->"  shift, and go to state 137
    ')'   shift, and go to state 211


State 177

   25 constr: T_Id "of" type multype .
   27 multype: multype . type

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    $default  reduce using rule 25 (constr)

    type   go to state 212
    type1  go to state 67
    type2  go to state 68


State 178

   23 mulconstr: mulconstr '|' constr .

    $default  reduce using rule 23 (mulconstr)


State 179

   70 expr1: "for" T_id '=' expr1 . "to" expr1 "do" expr1 "done"
   71      | "for" T_id '=' expr1 . "downto" expr1 "do" expr1 "done"

    "downto"  shift, and go to state 213
    "to"      shift, and go to state 214


State 180

   67 expr1: "if" expr1 "then" expr1 .
   68      | "if" expr1 "then" expr1 . "else" expr1

    "else"  shift, and go to state 215

    "else"    [reduce using rule 67 (expr1)]
    $default  reduce using rule 67 (expr1)


State 181

  140 pattern1: "false" .

    $default  reduce using rule 140 (pattern1)


State 182

  139 pattern1: "true" .

    $default  reduce using rule 139 (pattern1)


State 183

  136 pattern1: "+." . T_real

    T_real  shift, and go to state 216


State 184

  137 pattern1: "-." . T_real

    T_real  shift, and go to state 217


State 185

  133 pattern1: '+' . T_integer

    T_integer  shift, and go to state 218


State 186

  134 pattern1: '-' . T_integer

    T_integer  shift, and go to state 219


State 187

  131 pattern: T_Id . pattern1 mulpat
  143 pattern1: T_Id .

    "false"      shift, and go to state 181
    "true"       shift, and go to state 182
    "+."         shift, and go to state 183
    "-."         shift, and go to state 184
    '+'          shift, and go to state 185
    '-'          shift, and go to state 186
    T_Id         shift, and go to state 220
    T_id         shift, and go to state 188
    T_integer    shift, and go to state 189
    T_real       shift, and go to state 190
    T_character  shift, and go to state 191
    '('          shift, and go to state 192

    $default  reduce using rule 143 (pattern1)

    pattern1  go to state 221


State 188

  141 pattern1: T_id .

    $default  reduce using rule 141 (pattern1)


State 189

  132 pattern1: T_integer .

    $default  reduce using rule 132 (pattern1)


State 190

  135 pattern1: T_real .

    $default  reduce using rule 135 (pattern1)


State 191

  138 pattern1: T_character .

    $default  reduce using rule 138 (pattern1)


State 192

  142 pattern1: '(' . pattern ')'

    "false"      shift, and go to state 181
    "true"       shift, and go to state 182
    "+."         shift, and go to state 183
    "-."         shift, and go to state 184
    '+'          shift, and go to state 185
    '-'          shift, and go to state 186
    T_Id         shift, and go to state 187
    T_id         shift, and go to state 188
    T_integer    shift, and go to state 189
    T_real       shift, and go to state 190
    T_character  shift, and go to state 191
    '('          shift, and go to state 192

    pattern   go to state 222
    pattern1  go to state 195


State 193

   72 expr1: "match" expr1 "with" clause . mulclause "end"

    $default  reduce using rule 99 (mulclause)

    mulclause  go to state 223


State 194

  129 clause: pattern . "->" expr

    "->"  shift, and go to state 224


State 195

  130 pattern: pattern1 .

    $default  reduce using rule 130 (pattern)


State 196

   69 expr1: "while" expr1 "do" expr1 . "done"

    "done"  shift, and go to state 225


State 197

   90 expr3: "begin" expr3 "end" .

    $default  reduce using rule 90 (expr3)


State 198

   86 expr3: "dim" T_integer T_id .

    $default  reduce using rule 86 (expr3)


State 199

   94 expr3: "for" T_id '=' . expr3 "to" expr3 "do" expr3 "done"
   95      | "for" T_id '=' . expr3 "downto" expr3 "do" expr3 "done"

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 226
    unop   go to state 103


State 200

   91 expr3: "if" expr3 "then" . expr3
   92      | "if" expr3 "then" . expr3 "else" expr3

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 227
    unop   go to state 103


State 201

   96 expr3: "match" expr3 "with" . clause mulclause "end"

    "false"      shift, and go to state 181
    "true"       shift, and go to state 182
    "+."         shift, and go to state 183
    "-."         shift, and go to state 184
    '+'          shift, and go to state 185
    '-'          shift, and go to state 186
    T_Id         shift, and go to state 187
    T_id         shift, and go to state 188
    T_integer    shift, and go to state 189
    T_real       shift, and go to state 190
    T_character  shift, and go to state 191
    '('          shift, and go to state 192

    clause    go to state 228
    pattern   go to state 194
    pattern1  go to state 195


State 202

   93 expr3: "while" expr3 "do" . expr3 "done"

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 229
    unop   go to state 103


State 203

   46 expr: expr . binop expr1
   84 expr3: T_id '[' expr . mulexpr ']'

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130

    $default  reduce using rule 16 (mulexpr)

    mulexpr  go to state 230
    binop    go to state 132


State 204

   65 expr1: letdef "in" . expr1
   89 expr3: '(' letdef "in" . expr3 ')'

    "begin"      shift, and go to state 231
    "delete"     shift, and go to state 232
    "dim"        shift, and go to state 233
    "false"      shift, and go to state 234
    "for"        shift, and go to state 235
    "if"         shift, and go to state 236
    "let"        shift, and go to state 3
    "match"      shift, and go to state 237
    "new"        shift, and go to state 238
    "not"        shift, and go to state 39
    "true"       shift, and go to state 239
    "while"      shift, and go to state 240
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 241
    T_id         shift, and go to state 242
    T_integer    shift, and go to state 243
    T_real       shift, and go to state 244
    T_character  shift, and go to state 245
    T_string     shift, and go to state 246
    '('          shift, and go to state 247

    letdef  go to state 54
    expr1   go to state 167
    expr3   go to state 248
    unop    go to state 249


State 205

   80 expr3: '(' expr ')' .

    $default  reduce using rule 80 (expr3)


State 206

   98 mulexpr2: mulexpr2 expr3 .

    $default  reduce using rule 98 (mulexpr2)


State 207

   17 mulexpr: mulexpr . ',' expr
   60 expr1: T_id '[' expr mulexpr . ']'

    ']'  shift, and go to state 250
    ','  shift, and go to state 169


State 208

   13 def: "mutable" T_id '[' expr mulexpr ']' ':' . type

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type   go to state 251
    type1  go to state 67
    type2  go to state 68


State 209

   17 mulexpr: mulexpr ',' expr .
   46 expr: expr . binop expr1

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130

    $default  reduce using rule 17 (mulexpr)

    binop  go to state 132


State 210

   42 type2: "array" '[' '*' muldim . ']' "of" type2
   44 muldim: muldim . ',' '*'

    ']'  shift, and go to state 252
    ','  shift, and go to state 253


State 211

   29 par: '(' T_id ':' type ')' .

    $default  reduce using rule 29 (par)


State 212

   27 multype: multype type .
   31 type: type . "->" type1

    "->"  shift, and go to state 137

    $default  reduce using rule 27 (multype)


State 213

   71 expr1: "for" T_id '=' expr1 "downto" . expr1 "do" expr1 "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 254
    unop    go to state 57


State 214

   70 expr1: "for" T_id '=' expr1 "to" . expr1 "do" expr1 "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 255
    unop    go to state 57


State 215

   68 expr1: "if" expr1 "then" expr1 "else" . expr1

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 256
    unop    go to state 57


State 216

  136 pattern1: "+." T_real .

    $default  reduce using rule 136 (pattern1)


State 217

  137 pattern1: "-." T_real .

    $default  reduce using rule 137 (pattern1)


State 218

  133 pattern1: '+' T_integer .

    $default  reduce using rule 133 (pattern1)


State 219

  134 pattern1: '-' T_integer .

    $default  reduce using rule 134 (pattern1)


State 220

  143 pattern1: T_Id .

    $default  reduce using rule 143 (pattern1)


State 221

  131 pattern: T_Id pattern1 . mulpat

    $default  reduce using rule 144 (mulpat)

    mulpat  go to state 257


State 222

  142 pattern1: '(' pattern . ')'

    ')'  shift, and go to state 258


State 223

   72 expr1: "match" expr1 "with" clause mulclause . "end"
  100 mulclause: mulclause . '|' clause

    "end"  shift, and go to state 259
    '|'    shift, and go to state 260


State 224

  129 clause: pattern "->" . expr

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 261
    expr1   go to state 56
    unop    go to state 57


State 225

   69 expr1: "while" expr1 "do" expr1 "done" .

    $default  reduce using rule 69 (expr1)


State 226

   94 expr3: "for" T_id '=' expr3 . "to" expr3 "do" expr3 "done"
   95      | "for" T_id '=' expr3 . "downto" expr3 "do" expr3 "done"

    "downto"  shift, and go to state 262
    "to"      shift, and go to state 263


State 227

   91 expr3: "if" expr3 "then" expr3 .
   92      | "if" expr3 "then" expr3 . "else" expr3

    "else"  shift, and go to state 264

    "else"    [reduce using rule 91 (expr3)]
    $default  reduce using rule 91 (expr3)


State 228

   96 expr3: "match" expr3 "with" clause . mulclause "end"

    $default  reduce using rule 99 (mulclause)

    mulclause  go to state 265


State 229

   93 expr3: "while" expr3 "do" expr3 . "done"

    "done"  shift, and go to state 266


State 230

   17 mulexpr: mulexpr . ',' expr
   84 expr3: T_id '[' expr mulexpr . ']'

    ']'  shift, and go to state 267
    ','  shift, and go to state 169


State 231

   66 expr1: "begin" . expr1 "end"
   90 expr3: "begin" . expr3 "end"

    "begin"      shift, and go to state 231
    "delete"     shift, and go to state 232
    "dim"        shift, and go to state 233
    "false"      shift, and go to state 234
    "for"        shift, and go to state 235
    "if"         shift, and go to state 236
    "let"        shift, and go to state 3
    "match"      shift, and go to state 237
    "new"        shift, and go to state 238
    "not"        shift, and go to state 39
    "true"       shift, and go to state 239
    "while"      shift, and go to state 240
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 241
    T_id         shift, and go to state 242
    T_integer    shift, and go to state 243
    T_real       shift, and go to state 244
    T_character  shift, and go to state 245
    T_string     shift, and go to state 246
    '('          shift, and go to state 247

    letdef  go to state 54
    expr1   go to state 76
    expr3   go to state 149
    unop    go to state 249


State 232

   64 expr1: "delete" . expr1
   88 expr3: "delete" . expr3

    "begin"      shift, and go to state 231
    "delete"     shift, and go to state 232
    "dim"        shift, and go to state 233
    "false"      shift, and go to state 234
    "for"        shift, and go to state 235
    "if"         shift, and go to state 236
    "let"        shift, and go to state 3
    "match"      shift, and go to state 237
    "new"        shift, and go to state 238
    "not"        shift, and go to state 39
    "true"       shift, and go to state 239
    "while"      shift, and go to state 240
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 241
    T_id         shift, and go to state 242
    T_integer    shift, and go to state 243
    T_real       shift, and go to state 244
    T_character  shift, and go to state 245
    T_string     shift, and go to state 246
    '('          shift, and go to state 247

    letdef  go to state 54
    expr1   go to state 77
    expr3   go to state 150
    unop    go to state 249


State 233

   61 expr1: "dim" . T_id
   62      | "dim" . T_integer T_id
   85 expr3: "dim" . T_id
   86      | "dim" . T_integer T_id

    T_id       shift, and go to state 268
    T_integer  shift, and go to state 269


State 234

   52 expr1: "false" .
   78 expr3: "false" .

    "do"      reduce using rule 52 (expr1)
    "do"      [reduce using rule 78 (expr3)]
    "downto"  reduce using rule 52 (expr1)
    "downto"  [reduce using rule 78 (expr3)]
    "end"     reduce using rule 52 (expr1)
    "end"     [reduce using rule 78 (expr3)]
    "then"    reduce using rule 52 (expr1)
    "then"    [reduce using rule 78 (expr3)]
    "to"      reduce using rule 52 (expr1)
    "to"      [reduce using rule 78 (expr3)]
    "with"    reduce using rule 52 (expr1)
    "with"    [reduce using rule 78 (expr3)]
    ')'       reduce using rule 52 (expr1)
    ')'       [reduce using rule 78 (expr3)]
    $default  reduce using rule 52 (expr1)


State 235

   70 expr1: "for" . T_id '=' expr1 "to" expr1 "do" expr1 "done"
   71      | "for" . T_id '=' expr1 "downto" expr1 "do" expr1 "done"
   94 expr3: "for" . T_id '=' expr3 "to" expr3 "do" expr3 "done"
   95      | "for" . T_id '=' expr3 "downto" expr3 "do" expr3 "done"

    T_id  shift, and go to state 270


State 236

   67 expr1: "if" . expr1 "then" expr1
   68      | "if" . expr1 "then" expr1 "else" expr1
   91 expr3: "if" . expr3 "then" expr3
   92      | "if" . expr3 "then" expr3 "else" expr3

    "begin"      shift, and go to state 231
    "delete"     shift, and go to state 232
    "dim"        shift, and go to state 233
    "false"      shift, and go to state 234
    "for"        shift, and go to state 235
    "if"         shift, and go to state 236
    "let"        shift, and go to state 3
    "match"      shift, and go to state 237
    "new"        shift, and go to state 238
    "not"        shift, and go to state 39
    "true"       shift, and go to state 239
    "while"      shift, and go to state 240
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 241
    T_id         shift, and go to state 242
    T_integer    shift, and go to state 243
    T_real       shift, and go to state 244
    T_character  shift, and go to state 245
    T_string     shift, and go to state 246
    '('          shift, and go to state 247

    letdef  go to state 54
    expr1   go to state 81
    expr3   go to state 154
    unop    go to state 249


State 237

   72 expr1: "match" . expr1 "with" clause mulclause "end"
   96 expr3: "match" . expr3 "with" clause mulclause "end"

    "begin"      shift, and go to state 231
    "delete"     shift, and go to state 232
    "dim"        shift, and go to state 233
    "false"      shift, and go to state 234
    "for"        shift, and go to state 235
    "if"         shift, and go to state 236
    "let"        shift, and go to state 3
    "match"      shift, and go to state 237
    "new"        shift, and go to state 238
    "not"        shift, and go to state 39
    "true"       shift, and go to state 239
    "while"      shift, and go to state 240
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 241
    T_id         shift, and go to state 242
    T_integer    shift, and go to state 243
    T_real       shift, and go to state 244
    T_character  shift, and go to state 245
    T_string     shift, and go to state 246
    '('          shift, and go to state 247

    letdef  go to state 54
    expr1   go to state 82
    expr3   go to state 155
    unop    go to state 249


State 238

   63 expr1: "new" . type
   87 expr3: "new" . type

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type   go to state 271
    type1  go to state 67
    type2  go to state 68


State 239

   51 expr1: "true" .
   77 expr3: "true" .

    "do"      reduce using rule 51 (expr1)
    "do"      [reduce using rule 77 (expr3)]
    "downto"  reduce using rule 51 (expr1)
    "downto"  [reduce using rule 77 (expr3)]
    "end"     reduce using rule 51 (expr1)
    "end"     [reduce using rule 77 (expr3)]
    "then"    reduce using rule 51 (expr1)
    "then"    [reduce using rule 77 (expr3)]
    "to"      reduce using rule 51 (expr1)
    "to"      [reduce using rule 77 (expr3)]
    "with"    reduce using rule 51 (expr1)
    "with"    [reduce using rule 77 (expr3)]
    ')'       reduce using rule 51 (expr1)
    ')'       [reduce using rule 77 (expr3)]
    $default  reduce using rule 51 (expr1)


State 240

   69 expr1: "while" . expr1 "do" expr1 "done"
   93 expr3: "while" . expr3 "do" expr3 "done"

    "begin"      shift, and go to state 231
    "delete"     shift, and go to state 232
    "dim"        shift, and go to state 233
    "false"      shift, and go to state 234
    "for"        shift, and go to state 235
    "if"         shift, and go to state 236
    "let"        shift, and go to state 3
    "match"      shift, and go to state 237
    "new"        shift, and go to state 238
    "not"        shift, and go to state 39
    "true"       shift, and go to state 239
    "while"      shift, and go to state 240
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 241
    T_id         shift, and go to state 242
    T_integer    shift, and go to state 243
    T_real       shift, and go to state 244
    T_character  shift, and go to state 245
    T_string     shift, and go to state 246
    '('          shift, and go to state 247

    letdef  go to state 54
    expr1   go to state 84
    expr3   go to state 157
    unop    go to state 249


State 241

   57 expr1: T_Id .
   59      | T_Id . expr3 mulexpr2
   83 expr3: T_Id .

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    "do"      reduce using rule 57 (expr1)
    "do"      [reduce using rule 83 (expr3)]
    "downto"  reduce using rule 57 (expr1)
    "downto"  [reduce using rule 83 (expr3)]
    "end"     reduce using rule 57 (expr1)
    "end"     [reduce using rule 83 (expr3)]
    "then"    reduce using rule 57 (expr1)
    "then"    [reduce using rule 83 (expr3)]
    "to"      reduce using rule 57 (expr1)
    "to"      [reduce using rule 83 (expr3)]
    "with"    reduce using rule 57 (expr1)
    "with"    [reduce using rule 83 (expr3)]
    "+."      [reduce using rule 57 (expr1)]
    "-."      [reduce using rule 57 (expr1)]
    '+'       [reduce using rule 57 (expr1)]
    '-'       [reduce using rule 57 (expr1)]
    ')'       reduce using rule 57 (expr1)
    ')'       [reduce using rule 83 (expr3)]
    $default  reduce using rule 57 (expr1)

    expr3  go to state 102
    unop   go to state 103


State 242

   56 expr1: T_id .
   58      | T_id . expr3 mulexpr2
   60      | T_id . '[' expr mulexpr ']'
   82 expr3: T_id .
   84      | T_id . '[' expr mulexpr ']'

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    '['          shift, and go to state 272
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    "do"      reduce using rule 56 (expr1)
    "do"      [reduce using rule 82 (expr3)]
    "downto"  reduce using rule 56 (expr1)
    "downto"  [reduce using rule 82 (expr3)]
    "end"     reduce using rule 56 (expr1)
    "end"     [reduce using rule 82 (expr3)]
    "then"    reduce using rule 56 (expr1)
    "then"    [reduce using rule 82 (expr3)]
    "to"      reduce using rule 56 (expr1)
    "to"      [reduce using rule 82 (expr3)]
    "with"    reduce using rule 56 (expr1)
    "with"    [reduce using rule 82 (expr3)]
    "+."      [reduce using rule 56 (expr1)]
    "-."      [reduce using rule 56 (expr1)]
    '+'       [reduce using rule 56 (expr1)]
    '-'       [reduce using rule 56 (expr1)]
    ')'       reduce using rule 56 (expr1)
    ')'       [reduce using rule 82 (expr3)]
    $default  reduce using rule 56 (expr1)

    expr3  go to state 105
    unop   go to state 103


State 243

   47 expr1: T_integer .
   73 expr3: T_integer .

    "do"      reduce using rule 47 (expr1)
    "do"      [reduce using rule 73 (expr3)]
    "downto"  reduce using rule 47 (expr1)
    "downto"  [reduce using rule 73 (expr3)]
    "end"     reduce using rule 47 (expr1)
    "end"     [reduce using rule 73 (expr3)]
    "then"    reduce using rule 47 (expr1)
    "then"    [reduce using rule 73 (expr3)]
    "to"      reduce using rule 47 (expr1)
    "to"      [reduce using rule 73 (expr3)]
    "with"    reduce using rule 47 (expr1)
    "with"    [reduce using rule 73 (expr3)]
    ')'       reduce using rule 47 (expr1)
    ')'       [reduce using rule 73 (expr3)]
    $default  reduce using rule 47 (expr1)


State 244

   48 expr1: T_real .
   74 expr3: T_real .

    "do"      reduce using rule 48 (expr1)
    "do"      [reduce using rule 74 (expr3)]
    "downto"  reduce using rule 48 (expr1)
    "downto"  [reduce using rule 74 (expr3)]
    "end"     reduce using rule 48 (expr1)
    "end"     [reduce using rule 74 (expr3)]
    "then"    reduce using rule 48 (expr1)
    "then"    [reduce using rule 74 (expr3)]
    "to"      reduce using rule 48 (expr1)
    "to"      [reduce using rule 74 (expr3)]
    "with"    reduce using rule 48 (expr1)
    "with"    [reduce using rule 74 (expr3)]
    ')'       reduce using rule 48 (expr1)
    ')'       [reduce using rule 74 (expr3)]
    $default  reduce using rule 48 (expr1)


State 245

   49 expr1: T_character .
   75 expr3: T_character .

    "do"      reduce using rule 49 (expr1)
    "do"      [reduce using rule 75 (expr3)]
    "downto"  reduce using rule 49 (expr1)
    "downto"  [reduce using rule 75 (expr3)]
    "end"     reduce using rule 49 (expr1)
    "end"     [reduce using rule 75 (expr3)]
    "then"    reduce using rule 49 (expr1)
    "then"    [reduce using rule 75 (expr3)]
    "to"      reduce using rule 49 (expr1)
    "to"      [reduce using rule 75 (expr3)]
    "with"    reduce using rule 49 (expr1)
    "with"    [reduce using rule 75 (expr3)]
    ')'       reduce using rule 49 (expr1)
    ')'       [reduce using rule 75 (expr3)]
    $default  reduce using rule 49 (expr1)


State 246

   50 expr1: T_string .
   76 expr3: T_string .

    "do"      reduce using rule 50 (expr1)
    "do"      [reduce using rule 76 (expr3)]
    "downto"  reduce using rule 50 (expr1)
    "downto"  [reduce using rule 76 (expr3)]
    "end"     reduce using rule 50 (expr1)
    "end"     [reduce using rule 76 (expr3)]
    "then"    reduce using rule 50 (expr1)
    "then"    [reduce using rule 76 (expr3)]
    "to"      reduce using rule 50 (expr1)
    "to"      [reduce using rule 76 (expr3)]
    "with"    reduce using rule 50 (expr1)
    "with"    [reduce using rule 76 (expr3)]
    ')'       reduce using rule 50 (expr1)
    ')'       [reduce using rule 76 (expr3)]
    $default  reduce using rule 50 (expr1)


State 247

   53 expr1: '(' . ')'
   54      | '(' . expr ')'
   79 expr3: '(' . ')'
   80      | '(' . expr ')'
   89      | '(' . letdef "in" expr3 ')'

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53
    ')'          shift, and go to state 273

    letdef  go to state 160
    expr    go to state 274
    expr1   go to state 56
    unop    go to state 57


State 248

   89 expr3: '(' letdef "in" expr3 . ')'

    ')'  shift, and go to state 275


State 249

   55 expr1: unop . expr1
   81 expr3: unop . expr3

    "begin"      shift, and go to state 231
    "delete"     shift, and go to state 232
    "dim"        shift, and go to state 233
    "false"      shift, and go to state 234
    "for"        shift, and go to state 235
    "if"         shift, and go to state 236
    "let"        shift, and go to state 3
    "match"      shift, and go to state 237
    "new"        shift, and go to state 238
    "not"        shift, and go to state 39
    "true"       shift, and go to state 239
    "while"      shift, and go to state 240
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 241
    T_id         shift, and go to state 242
    T_integer    shift, and go to state 243
    T_real       shift, and go to state 244
    T_character  shift, and go to state 245
    T_string     shift, and go to state 246
    '('          shift, and go to state 247

    letdef  go to state 54
    expr1   go to state 133
    expr3   go to state 163
    unop    go to state 249


State 250

   60 expr1: T_id '[' expr mulexpr ']' .

    $default  reduce using rule 60 (expr1)


State 251

   13 def: "mutable" T_id '[' expr mulexpr ']' ':' type .
   31 type: type . "->" type1

    "->"  shift, and go to state 137

    $default  reduce using rule 13 (def)


State 252

   42 type2: "array" '[' '*' muldim ']' . "of" type2

    "of"  shift, and go to state 276


State 253

   44 muldim: muldim ',' . '*'

    '*'  shift, and go to state 277


State 254

   71 expr1: "for" T_id '=' expr1 "downto" expr1 . "do" expr1 "done"

    "do"  shift, and go to state 278


State 255

   70 expr1: "for" T_id '=' expr1 "to" expr1 . "do" expr1 "done"

    "do"  shift, and go to state 279


State 256

   68 expr1: "if" expr1 "then" expr1 "else" expr1 .

    $default  reduce using rule 68 (expr1)


State 257

  131 pattern: T_Id pattern1 mulpat .
  145 mulpat: mulpat . pattern1

    "false"      shift, and go to state 181
    "true"       shift, and go to state 182
    "+."         shift, and go to state 183
    "-."         shift, and go to state 184
    '+'          shift, and go to state 185
    '-'          shift, and go to state 186
    T_Id         shift, and go to state 220
    T_id         shift, and go to state 188
    T_integer    shift, and go to state 189
    T_real       shift, and go to state 190
    T_character  shift, and go to state 191
    '('          shift, and go to state 192

    $default  reduce using rule 131 (pattern)

    pattern1  go to state 280


State 258

  142 pattern1: '(' pattern ')' .

    $default  reduce using rule 142 (pattern1)


State 259

   72 expr1: "match" expr1 "with" clause mulclause "end" .

    $default  reduce using rule 72 (expr1)


State 260

  100 mulclause: mulclause '|' . clause

    "false"      shift, and go to state 181
    "true"       shift, and go to state 182
    "+."         shift, and go to state 183
    "-."         shift, and go to state 184
    '+'          shift, and go to state 185
    '-'          shift, and go to state 186
    T_Id         shift, and go to state 187
    T_id         shift, and go to state 188
    T_integer    shift, and go to state 189
    T_real       shift, and go to state 190
    T_character  shift, and go to state 191
    '('          shift, and go to state 192

    clause    go to state 281
    pattern   go to state 194
    pattern1  go to state 195


State 261

   46 expr: expr . binop expr1
  129 clause: pattern "->" expr .

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130

    $default  reduce using rule 129 (clause)

    binop  go to state 132


State 262

   95 expr3: "for" T_id '=' expr3 "downto" . expr3 "do" expr3 "done"

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 282
    unop   go to state 103


State 263

   94 expr3: "for" T_id '=' expr3 "to" . expr3 "do" expr3 "done"

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 283
    unop   go to state 103


State 264

   92 expr3: "if" expr3 "then" expr3 "else" . expr3

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 284
    unop   go to state 103


State 265

   96 expr3: "match" expr3 "with" clause mulclause . "end"
  100 mulclause: mulclause . '|' clause

    "end"  shift, and go to state 285
    '|'    shift, and go to state 260


State 266

   93 expr3: "while" expr3 "do" expr3 "done" .

    $default  reduce using rule 93 (expr3)


State 267

   84 expr3: T_id '[' expr mulexpr ']' .

    $default  reduce using rule 84 (expr3)


State 268

   61 expr1: "dim" T_id .
   85 expr3: "dim" T_id .

    "do"      reduce using rule 61 (expr1)
    "do"      [reduce using rule 85 (expr3)]
    "downto"  reduce using rule 61 (expr1)
    "downto"  [reduce using rule 85 (expr3)]
    "end"     reduce using rule 61 (expr1)
    "end"     [reduce using rule 85 (expr3)]
    "then"    reduce using rule 61 (expr1)
    "then"    [reduce using rule 85 (expr3)]
    "to"      reduce using rule 61 (expr1)
    "to"      [reduce using rule 85 (expr3)]
    "with"    reduce using rule 61 (expr1)
    "with"    [reduce using rule 85 (expr3)]
    ')'       reduce using rule 61 (expr1)
    ')'       [reduce using rule 85 (expr3)]
    $default  reduce using rule 61 (expr1)


State 269

   62 expr1: "dim" T_integer . T_id
   86 expr3: "dim" T_integer . T_id

    T_id  shift, and go to state 286


State 270

   70 expr1: "for" T_id . '=' expr1 "to" expr1 "do" expr1 "done"
   71      | "for" T_id . '=' expr1 "downto" expr1 "do" expr1 "done"
   94 expr3: "for" T_id . '=' expr3 "to" expr3 "do" expr3 "done"
   95      | "for" T_id . '=' expr3 "downto" expr3 "do" expr3 "done"

    '='  shift, and go to state 287


State 271

   31 type: type . "->" type1
   63 expr1: "new" type .
   87 expr3: "new" type .

    "->"  shift, and go to state 137

    "do"      reduce using rule 63 (expr1)
    "do"      [reduce using rule 87 (expr3)]
    "downto"  reduce using rule 63 (expr1)
    "downto"  [reduce using rule 87 (expr3)]
    "end"     reduce using rule 63 (expr1)
    "end"     [reduce using rule 87 (expr3)]
    "then"    reduce using rule 63 (expr1)
    "then"    [reduce using rule 87 (expr3)]
    "to"      reduce using rule 63 (expr1)
    "to"      [reduce using rule 87 (expr3)]
    "with"    reduce using rule 63 (expr1)
    "with"    [reduce using rule 87 (expr3)]
    ')'       reduce using rule 63 (expr1)
    ')'       [reduce using rule 87 (expr3)]
    $default  reduce using rule 63 (expr1)


State 272

   60 expr1: T_id '[' . expr mulexpr ']'
   84 expr3: T_id '[' . expr mulexpr ']'

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr    go to state 288
    expr1   go to state 56
    unop    go to state 57


State 273

   53 expr1: '(' ')' .
   79 expr3: '(' ')' .

    "do"      reduce using rule 53 (expr1)
    "do"      [reduce using rule 79 (expr3)]
    "downto"  reduce using rule 53 (expr1)
    "downto"  [reduce using rule 79 (expr3)]
    "end"     reduce using rule 53 (expr1)
    "end"     [reduce using rule 79 (expr3)]
    "then"    reduce using rule 53 (expr1)
    "then"    [reduce using rule 79 (expr3)]
    "to"      reduce using rule 53 (expr1)
    "to"      [reduce using rule 79 (expr3)]
    "with"    reduce using rule 53 (expr1)
    "with"    [reduce using rule 79 (expr3)]
    ')'       reduce using rule 53 (expr1)
    ')'       [reduce using rule 79 (expr3)]
    $default  reduce using rule 53 (expr1)


State 274

   46 expr: expr . binop expr1
   54 expr1: '(' expr . ')'
   80 expr3: '(' expr . ')'

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130
    ')'    shift, and go to state 289

    binop  go to state 132


State 275

   89 expr3: '(' letdef "in" expr3 ')' .

    $default  reduce using rule 89 (expr3)


State 276

   42 type2: "array" '[' '*' muldim ']' "of" . type2

    "array"  shift, and go to state 58
    "bool"   shift, and go to state 59
    "char"   shift, and go to state 60
    "float"  shift, and go to state 61
    "int"    shift, and go to state 62
    "unit"   shift, and go to state 63
    T_id     shift, and go to state 64
    '('      shift, and go to state 65

    type2  go to state 290


State 277

   44 muldim: muldim ',' '*' .

    $default  reduce using rule 44 (muldim)


State 278

   71 expr1: "for" T_id '=' expr1 "downto" expr1 "do" . expr1 "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 291
    unop    go to state 57


State 279

   70 expr1: "for" T_id '=' expr1 "to" expr1 "do" . expr1 "done"

    "begin"      shift, and go to state 31
    "delete"     shift, and go to state 32
    "dim"        shift, and go to state 33
    "false"      shift, and go to state 34
    "for"        shift, and go to state 35
    "if"         shift, and go to state 36
    "let"        shift, and go to state 3
    "match"      shift, and go to state 37
    "new"        shift, and go to state 38
    "not"        shift, and go to state 39
    "true"       shift, and go to state 40
    "while"      shift, and go to state 41
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 47
    T_id         shift, and go to state 48
    T_integer    shift, and go to state 49
    T_real       shift, and go to state 50
    T_character  shift, and go to state 51
    T_string     shift, and go to state 52
    '('          shift, and go to state 53

    letdef  go to state 54
    expr1   go to state 292
    unop    go to state 57


State 280

  145 mulpat: mulpat pattern1 .

    $default  reduce using rule 145 (mulpat)


State 281

  100 mulclause: mulclause '|' clause .

    $default  reduce using rule 100 (mulclause)


State 282

   95 expr3: "for" T_id '=' expr3 "downto" expr3 . "do" expr3 "done"

    "do"  shift, and go to state 293


State 283

   94 expr3: "for" T_id '=' expr3 "to" expr3 . "do" expr3 "done"

    "do"  shift, and go to state 294


State 284

   92 expr3: "if" expr3 "then" expr3 "else" expr3 .

    $default  reduce using rule 92 (expr3)


State 285

   96 expr3: "match" expr3 "with" clause mulclause "end" .

    $default  reduce using rule 96 (expr3)


State 286

   62 expr1: "dim" T_integer T_id .
   86 expr3: "dim" T_integer T_id .

    "do"      reduce using rule 62 (expr1)
    "do"      [reduce using rule 86 (expr3)]
    "downto"  reduce using rule 62 (expr1)
    "downto"  [reduce using rule 86 (expr3)]
    "end"     reduce using rule 62 (expr1)
    "end"     [reduce using rule 86 (expr3)]
    "then"    reduce using rule 62 (expr1)
    "then"    [reduce using rule 86 (expr3)]
    "to"      reduce using rule 62 (expr1)
    "to"      [reduce using rule 86 (expr3)]
    "with"    reduce using rule 62 (expr1)
    "with"    [reduce using rule 86 (expr3)]
    ')'       reduce using rule 62 (expr1)
    ')'       [reduce using rule 86 (expr3)]
    $default  reduce using rule 62 (expr1)


State 287

   70 expr1: "for" T_id '=' . expr1 "to" expr1 "do" expr1 "done"
   71      | "for" T_id '=' . expr1 "downto" expr1 "do" expr1 "done"
   94 expr3: "for" T_id '=' . expr3 "to" expr3 "do" expr3 "done"
   95      | "for" T_id '=' . expr3 "downto" expr3 "do" expr3 "done"

    "begin"      shift, and go to state 231
    "delete"     shift, and go to state 232
    "dim"        shift, and go to state 233
    "false"      shift, and go to state 234
    "for"        shift, and go to state 235
    "if"         shift, and go to state 236
    "let"        shift, and go to state 3
    "match"      shift, and go to state 237
    "new"        shift, and go to state 238
    "not"        shift, and go to state 39
    "true"       shift, and go to state 239
    "while"      shift, and go to state 240
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 241
    T_id         shift, and go to state 242
    T_integer    shift, and go to state 243
    T_real       shift, and go to state 244
    T_character  shift, and go to state 245
    T_string     shift, and go to state 246
    '('          shift, and go to state 247

    letdef  go to state 54
    expr1   go to state 179
    expr3   go to state 226
    unop    go to state 249


State 288

   46 expr: expr . binop expr1
   60 expr1: T_id '[' expr . mulexpr ']'
   84 expr3: T_id '[' expr . mulexpr ']'

    "mod"  shift, and go to state 109
    "+."   shift, and go to state 110
    "-."   shift, and go to state 111
    "*."   shift, and go to state 112
    "/."   shift, and go to state 113
    "&&"   shift, and go to state 114
    "**"   shift, and go to state 115
    "||"   shift, and go to state 116
    "<>"   shift, and go to state 117
    "<="   shift, and go to state 118
    ">="   shift, and go to state 119
    "=="   shift, and go to state 120
    "!="   shift, and go to state 121
    ":="   shift, and go to state 122
    ';'    shift, and go to state 123
    '='    shift, and go to state 124
    '<'    shift, and go to state 125
    '>'    shift, and go to state 126
    '+'    shift, and go to state 127
    '-'    shift, and go to state 128
    '*'    shift, and go to state 129
    '/'    shift, and go to state 130

    $default  reduce using rule 16 (mulexpr)

    mulexpr  go to state 295
    binop    go to state 132


State 289

   54 expr1: '(' expr ')' .
   80 expr3: '(' expr ')' .

    "do"      reduce using rule 54 (expr1)
    "do"      [reduce using rule 80 (expr3)]
    "downto"  reduce using rule 54 (expr1)
    "downto"  [reduce using rule 80 (expr3)]
    "end"     reduce using rule 54 (expr1)
    "end"     [reduce using rule 80 (expr3)]
    "then"    reduce using rule 54 (expr1)
    "then"    [reduce using rule 80 (expr3)]
    "to"      reduce using rule 54 (expr1)
    "to"      [reduce using rule 80 (expr3)]
    "with"    reduce using rule 54 (expr1)
    "with"    [reduce using rule 80 (expr3)]
    ')'       reduce using rule 54 (expr1)
    ')'       [reduce using rule 80 (expr3)]
    $default  reduce using rule 54 (expr1)


State 290

   42 type2: "array" '[' '*' muldim ']' "of" type2 .

    $default  reduce using rule 42 (type2)


State 291

   71 expr1: "for" T_id '=' expr1 "downto" expr1 "do" expr1 . "done"

    "done"  shift, and go to state 296


State 292

   70 expr1: "for" T_id '=' expr1 "to" expr1 "do" expr1 . "done"

    "done"  shift, and go to state 297


State 293

   95 expr3: "for" T_id '=' expr3 "downto" expr3 "do" . expr3 "done"

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 298
    unop   go to state 103


State 294

   94 expr3: "for" T_id '=' expr3 "to" expr3 "do" . expr3 "done"

    "begin"      shift, and go to state 85
    "delete"     shift, and go to state 86
    "dim"        shift, and go to state 87
    "false"      shift, and go to state 88
    "for"        shift, and go to state 89
    "if"         shift, and go to state 90
    "match"      shift, and go to state 91
    "new"        shift, and go to state 92
    "not"        shift, and go to state 39
    "true"       shift, and go to state 93
    "while"      shift, and go to state 94
    "+."         shift, and go to state 42
    "-."         shift, and go to state 43
    '+'          shift, and go to state 44
    '-'          shift, and go to state 45
    '!'          shift, and go to state 46
    T_Id         shift, and go to state 95
    T_id         shift, and go to state 96
    T_integer    shift, and go to state 97
    T_real       shift, and go to state 98
    T_character  shift, and go to state 99
    T_string     shift, and go to state 100
    '('          shift, and go to state 101

    expr3  go to state 299
    unop   go to state 103


State 295

   17 mulexpr: mulexpr . ',' expr
   60 expr1: T_id '[' expr mulexpr . ']'
   84 expr3: T_id '[' expr mulexpr . ']'

    ']'  shift, and go to state 300
    ','  shift, and go to state 169


State 296

   71 expr1: "for" T_id '=' expr1 "downto" expr1 "do" expr1 "done" .

    $default  reduce using rule 71 (expr1)


State 297

   70 expr1: "for" T_id '=' expr1 "to" expr1 "do" expr1 "done" .

    $default  reduce using rule 70 (expr1)


State 298

   95 expr3: "for" T_id '=' expr3 "downto" expr3 "do" expr3 . "done"

    "done"  shift, and go to state 301


State 299

   94 expr3: "for" T_id '=' expr3 "to" expr3 "do" expr3 . "done"

    "done"  shift, and go to state 302


State 300

   60 expr1: T_id '[' expr mulexpr ']' .
   84 expr3: T_id '[' expr mulexpr ']' .

    "do"      reduce using rule 60 (expr1)
    "do"      [reduce using rule 84 (expr3)]
    "downto"  reduce using rule 60 (expr1)
    "downto"  [reduce using rule 84 (expr3)]
    "end"     reduce using rule 60 (expr1)
    "end"     [reduce using rule 84 (expr3)]
    "then"    reduce using rule 60 (expr1)
    "then"    [reduce using rule 84 (expr3)]
    "to"      reduce using rule 60 (expr1)
    "to"      [reduce using rule 84 (expr3)]
    "with"    reduce using rule 60 (expr1)
    "with"    [reduce using rule 84 (expr3)]
    ')'       reduce using rule 60 (expr1)
    ')'       [reduce using rule 84 (expr3)]
    $default  reduce using rule 60 (expr1)


State 301

   95 expr3: "for" T_id '=' expr3 "downto" expr3 "do" expr3 "done" .

    $default  reduce using rule 95 (expr3)


State 302

   94 expr3: "for" T_id '=' expr3 "to" expr3 "do" expr3 "done" .

    $default  reduce using rule 94 (expr3)
