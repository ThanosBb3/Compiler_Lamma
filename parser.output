State 57 conflicts: 24 shift/reduce
State 58 conflicts: 24 shift/reduce
State 86 conflicts: 22 shift/reduce
State 94 conflicts: 42 shift/reduce
State 126 conflicts: 22 shift/reduce
State 131 conflicts: 2 shift/reduce
State 134 conflicts: 2 shift/reduce
State 141 conflicts: 24 reduce/reduce
State 142 conflicts: 24 reduce/reduce
State 143 conflicts: 24 reduce/reduce
State 144 conflicts: 24 reduce/reduce
State 148 conflicts: 22 shift/reduce
State 151 conflicts: 22 shift/reduce
State 160 conflicts: 23 shift/reduce
State 163 conflicts: 12 shift/reduce
State 185 conflicts: 12 shift/reduce
State 202 conflicts: 22 shift/reduce
State 208 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: %empty
    2        | letdef program
    3        | typedef program

    4 letdef: "let" def muldef
    5       | "let" "rec" def muldef

    6 muldef: %empty
    7       | "and" def muldef

    8 def: T_id mulpar "=" expr
    9    | T_id mulpar ":" type "=" expr
   10    | "mutable" T_id
   11    | "mutable" T_id ":" type
   12    | "mutable" T_id "[" expr mulexpr "]"
   13    | "mutable" T_id "[" expr mulexpr "]" ":" type

   14 mulpar: %empty
   15       | par mulpar

   16 mulexpr: %empty
   17        | "," expr mulexpr

   18 typedef: "type" tdef multdef

   19 multdef: %empty
   20        | "and" tdef multdef

   21 tdef: T_id "=" constr mulconstr

   22 mulconstr: %empty
   23          | "|" constr mulconstr

   24 constr: T_Id
   25       | T_Id "of" type multype

   26 multype: %empty
   27        | type multype

   28 par: T_id
   29    | "(" T_id ":" type ")"

   30 type: "unit"
   31     | "int"
   32     | "char"
   33     | "bool"
   34     | "float"
   35     | "(" type ")"
   36     | type "->" type
   37     | type "ref"
   38     | "array" "of" type
   39     | "array" "[" "*" muldim "]" "of" type
   40     | T_id

   41 muldim: %empty
   42       | "," "*" muldim

   43 expr: T_integer
   44     | T_real
   45     | T_character
   46     | T_string
   47     | "true"
   48     | "false"
   49     | "(" ")"
   50     | "(" expr ")"
   51     | unop expr
   52     | expr binop expr
   53     | T_id mulexpr2
   54     | T_Id mulexpr2
   55     | T_id "[" expr mulexpr "]"
   56     | "dim" T_id
   57     | "dim" T_integer T_id
   58     | "new" type
   59     | "delete" expr
   60     | letdef "in" expr
   61     | "begin" expr "end"
   62     | "if" expr "then" expr
   63     | "if" expr "then" expr "else" expr
   64     | "while" expr "do" expr "done"
   65     | "for" T_id "=" expr "to" expr "do" expr "done"
   66     | "for" T_id "=" expr "downto" expr "do" expr "done"
   67     | "match" expr "with" clause mulclause "end"

   68 mulexpr2: %empty
   69         | expr mulexpr2

   70 mulclause: %empty
   71          | "|" clause mulclause

   72 unop: '+'
   73     | '-'
   74     | "+."
   75     | "-."
   76     | '!'
   77     | "not"

   78 binop: '+'
   79      | '-'
   80      | '*'
   81      | '/'
   82      | "+."
   83      | "-."
   84      | "*."
   85      | "/."
   86      | "mod"
   87      | "**"
   88      | '='
   89      | "<>"
   90      | '<'
   91      | '>'
   92      | "<="
   93      | ">="
   94      | "=="
   95      | "!="
   96      | "&&"
   97      | "||"
   98      | ';'
   99      | ":="

  100 clause: pattern "->" expr

  101 pattern: T_integer
  102        | '+' T_integer
  103        | '-' T_integer
  104        | T_real
  105        | "+." T_real
  106        | "-." T_real
  107        | T_character
  108        | "true"
  109        | "false"
  110        | T_id
  111        | "(" pattern ")"
  112        | T_Id mulpat

  113 mulpat: %empty
  114       | pattern mulpat


Terminals, with rules where they appear

$end (0) 0
'!' (33) 76
'*' (42) 80
'+' (43) 72 78 102
'-' (45) 73 79 103
'/' (47) 81
';' (59) 98
'<' (60) 90
'=' (61) 88
'>' (62) 91
error (256)
"and" (258) 7 20
"array" (259) 38 39
"begin" (260) 61
"bool" (261) 33
"char" (262) 32
"delete" (263) 59
"dim" (264) 56 57
"do" (265) 64 65 66
"done" (266) 64 65 66
"downto" (267) 66
"else" (268) 63
"end" (269) 61 67
"false" (270) 48 109
"float" (271) 34
"for" (272) 65 66
"if" (273) 62 63
"in" (274) 60
"int" (275) 31
"let" (276) 4 5
"match" (277) 67
"mod" (278) 86
"mutable" (279) 10 11 12 13
"new" (280) 58
"not" (281) 77
"of" (282) 25 38 39
"rec" (283) 5
"ref" (284) 37
"then" (285) 62 63
"to" (286) 65
"true" (287) 47 108
"type" (288) 18
"unit" (289) 30
"while" (290) 64
"with" (291) 67
T_Id (292) 24 25 54 112
T_id (293) 8 9 10 11 12 13 21 28 29 40 53 55 56 57 65 66 110
T_integer (294) 43 57 101 102 103
T_real (295) 44 104 105 106
T_character (296) 45 107
T_string (297) 46
"*." (298) 84
"/." (299) 85
"+." (300) 74 82 105
"-." (301) 75 83 106
"<>" (302) 89
"<=" (303) 92
">=" (304) 93
"==" (305) 94
"!=" (306) 95
"&&" (307) 96
"||" (308) 97
"**" (309) 87
"=" (310) 8 9 21 65 66
":" (311) 9 11 13 29
"[" (312) 12 13 39 55
"]" (313) 12 13 39 55
"," (314) 17 42
"|" (315) 23 71
"(" (316) 29 35 49 50 111
")" (317) 29 35 49 50 111
"->" (318) 36 100
"*" (319) 39 42
":=" (320) 99


Nonterminals, with rules where they appear

$accept (75)
    on left: 0
program (76)
    on left: 1 2 3, on right: 0 2 3
letdef (77)
    on left: 4 5, on right: 2 60
muldef (78)
    on left: 6 7, on right: 4 5 7
def (79)
    on left: 8 9 10 11 12 13, on right: 4 5 7
mulpar (80)
    on left: 14 15, on right: 8 9 15
mulexpr (81)
    on left: 16 17, on right: 12 13 17 55
typedef (82)
    on left: 18, on right: 3
multdef (83)
    on left: 19 20, on right: 18 20
tdef (84)
    on left: 21, on right: 18 20
mulconstr (85)
    on left: 22 23, on right: 21 23
constr (86)
    on left: 24 25, on right: 21 23
multype (87)
    on left: 26 27, on right: 25 27
par (88)
    on left: 28 29, on right: 15
type (89)
    on left: 30 31 32 33 34 35 36 37 38 39 40, on right: 9 11 13 25
    27 29 35 36 37 38 39 58
muldim (90)
    on left: 41 42, on right: 39 42
expr (91)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 65 66 67, on right: 8 9 12 13 17 50 51 52 55 59 60
    61 62 63 64 65 66 67 69 100
mulexpr2 (92)
    on left: 68 69, on right: 53 54 69
mulclause (93)
    on left: 70 71, on right: 67 71
unop (94)
    on left: 72 73 74 75 76 77, on right: 51
binop (95)
    on left: 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
    96 97 98 99, on right: 52
clause (96)
    on left: 100, on right: 67 71
pattern (97)
    on left: 101 102 103 104 105 106 107 108 109 110 111 112, on right:
    100 111 114
mulpat (98)
    on left: 113 114, on right: 112 114


State 0

    0 $accept: . program $end

    "let"   shift, and go to state 1
    "type"  shift, and go to state 2

    $default  reduce using rule 1 (program)

    program  go to state 3
    letdef   go to state 4
    typedef  go to state 5


State 1

    4 letdef: "let" . def muldef
    5       | "let" . "rec" def muldef

    "mutable"  shift, and go to state 6
    "rec"      shift, and go to state 7
    T_id       shift, and go to state 8

    def  go to state 9


State 2

   18 typedef: "type" . tdef multdef

    T_id  shift, and go to state 10

    tdef  go to state 11


State 3

    0 $accept: program . $end

    $end  shift, and go to state 12


State 4

    2 program: letdef . program

    "let"   shift, and go to state 1
    "type"  shift, and go to state 2

    $default  reduce using rule 1 (program)

    program  go to state 13
    letdef   go to state 4
    typedef  go to state 5


State 5

    3 program: typedef . program

    "let"   shift, and go to state 1
    "type"  shift, and go to state 2

    $default  reduce using rule 1 (program)

    program  go to state 14
    letdef   go to state 4
    typedef  go to state 5


State 6

   10 def: "mutable" . T_id
   11    | "mutable" . T_id ":" type
   12    | "mutable" . T_id "[" expr mulexpr "]"
   13    | "mutable" . T_id "[" expr mulexpr "]" ":" type

    T_id  shift, and go to state 15


State 7

    5 letdef: "let" "rec" . def muldef

    "mutable"  shift, and go to state 6
    T_id       shift, and go to state 8

    def  go to state 16


State 8

    8 def: T_id . mulpar "=" expr
    9    | T_id . mulpar ":" type "=" expr

    T_id  shift, and go to state 17
    "("   shift, and go to state 18

    $default  reduce using rule 14 (mulpar)

    mulpar  go to state 19
    par     go to state 20


State 9

    4 letdef: "let" def . muldef

    "and"  shift, and go to state 21

    $default  reduce using rule 6 (muldef)

    muldef  go to state 22


State 10

   21 tdef: T_id . "=" constr mulconstr

    "="  shift, and go to state 23


State 11

   18 typedef: "type" tdef . multdef

    "and"  shift, and go to state 24

    $default  reduce using rule 19 (multdef)

    multdef  go to state 25


State 12

    0 $accept: program $end .

    $default  accept


State 13

    2 program: letdef program .

    $default  reduce using rule 2 (program)


State 14

    3 program: typedef program .

    $default  reduce using rule 3 (program)


State 15

   10 def: "mutable" T_id .
   11    | "mutable" T_id . ":" type
   12    | "mutable" T_id . "[" expr mulexpr "]"
   13    | "mutable" T_id . "[" expr mulexpr "]" ":" type

    ":"  shift, and go to state 26
    "["  shift, and go to state 27

    $default  reduce using rule 10 (def)


State 16

    5 letdef: "let" "rec" def . muldef

    "and"  shift, and go to state 21

    $default  reduce using rule 6 (muldef)

    muldef  go to state 28


State 17

   28 par: T_id .

    $default  reduce using rule 28 (par)


State 18

   29 par: "(" . T_id ":" type ")"

    T_id  shift, and go to state 29


State 19

    8 def: T_id mulpar . "=" expr
    9    | T_id mulpar . ":" type "=" expr

    "="  shift, and go to state 30
    ":"  shift, and go to state 31


State 20

   15 mulpar: par . mulpar

    T_id  shift, and go to state 17
    "("   shift, and go to state 18

    $default  reduce using rule 14 (mulpar)

    mulpar  go to state 32
    par     go to state 20


State 21

    7 muldef: "and" . def muldef

    "mutable"  shift, and go to state 6
    T_id       shift, and go to state 8

    def  go to state 33


State 22

    4 letdef: "let" def muldef .

    $default  reduce using rule 4 (letdef)


State 23

   21 tdef: T_id "=" . constr mulconstr

    T_Id  shift, and go to state 34

    constr  go to state 35


State 24

   20 multdef: "and" . tdef multdef

    T_id  shift, and go to state 10

    tdef  go to state 36


State 25

   18 typedef: "type" tdef multdef .

    $default  reduce using rule 18 (typedef)


State 26

   11 def: "mutable" T_id ":" . type

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44

    type  go to state 45


State 27

   12 def: "mutable" T_id "[" . expr mulexpr "]"
   13    | "mutable" T_id "[" . expr mulexpr "]" ":" type

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 70
    unop    go to state 71


State 28

    5 letdef: "let" "rec" def muldef .

    $default  reduce using rule 5 (letdef)


State 29

   29 par: "(" T_id . ":" type ")"

    ":"  shift, and go to state 72


State 30

    8 def: T_id mulpar "=" . expr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 73
    unop    go to state 71


State 31

    9 def: T_id mulpar ":" . type "=" expr

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44

    type  go to state 74


State 32

   15 mulpar: par mulpar .

    $default  reduce using rule 15 (mulpar)


State 33

    7 muldef: "and" def . muldef

    "and"  shift, and go to state 21

    $default  reduce using rule 6 (muldef)

    muldef  go to state 75


State 34

   24 constr: T_Id .
   25       | T_Id . "of" type multype

    "of"  shift, and go to state 76

    $default  reduce using rule 24 (constr)


State 35

   21 tdef: T_id "=" constr . mulconstr

    "|"  shift, and go to state 77

    $default  reduce using rule 22 (mulconstr)

    mulconstr  go to state 78


State 36

   20 multdef: "and" tdef . multdef

    "and"  shift, and go to state 24

    $default  reduce using rule 19 (multdef)

    multdef  go to state 79


State 37

   38 type: "array" . "of" type
   39     | "array" . "[" "*" muldim "]" "of" type

    "of"  shift, and go to state 80
    "["   shift, and go to state 81


State 38

   33 type: "bool" .

    $default  reduce using rule 33 (type)


State 39

   32 type: "char" .

    $default  reduce using rule 32 (type)


State 40

   34 type: "float" .

    $default  reduce using rule 34 (type)


State 41

   31 type: "int" .

    $default  reduce using rule 31 (type)


State 42

   30 type: "unit" .

    $default  reduce using rule 30 (type)


State 43

   40 type: T_id .

    $default  reduce using rule 40 (type)


State 44

   35 type: "(" . type ")"

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44

    type  go to state 82


State 45

   11 def: "mutable" T_id ":" type .
   36 type: type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 83
    "->"   shift, and go to state 84

    $default  reduce using rule 11 (def)


State 46

   61 expr: "begin" . expr "end"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 85
    unop    go to state 71


State 47

   59 expr: "delete" . expr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 86
    unop    go to state 71


State 48

   56 expr: "dim" . T_id
   57     | "dim" . T_integer T_id

    T_id       shift, and go to state 87
    T_integer  shift, and go to state 88


State 49

   48 expr: "false" .

    $default  reduce using rule 48 (expr)


State 50

   65 expr: "for" . T_id "=" expr "to" expr "do" expr "done"
   66     | "for" . T_id "=" expr "downto" expr "do" expr "done"

    T_id  shift, and go to state 89


State 51

   62 expr: "if" . expr "then" expr
   63     | "if" . expr "then" expr "else" expr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 90
    unop    go to state 71


State 52

   67 expr: "match" . expr "with" clause mulclause "end"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 91
    unop    go to state 71


State 53

   58 expr: "new" . type

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44

    type  go to state 92


State 54

   77 unop: "not" .

    $default  reduce using rule 77 (unop)


State 55

   47 expr: "true" .

    $default  reduce using rule 47 (expr)


State 56

   64 expr: "while" . expr "do" expr "done"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 93
    unop    go to state 71


State 57

   54 expr: T_Id . mulexpr2

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    "begin"      [reduce using rule 68 (mulexpr2)]
    "delete"     [reduce using rule 68 (mulexpr2)]
    "dim"        [reduce using rule 68 (mulexpr2)]
    "false"      [reduce using rule 68 (mulexpr2)]
    "for"        [reduce using rule 68 (mulexpr2)]
    "if"         [reduce using rule 68 (mulexpr2)]
    "let"        [reduce using rule 68 (mulexpr2)]
    "match"      [reduce using rule 68 (mulexpr2)]
    "new"        [reduce using rule 68 (mulexpr2)]
    "not"        [reduce using rule 68 (mulexpr2)]
    "true"       [reduce using rule 68 (mulexpr2)]
    "while"      [reduce using rule 68 (mulexpr2)]
    T_Id         [reduce using rule 68 (mulexpr2)]
    T_id         [reduce using rule 68 (mulexpr2)]
    T_integer    [reduce using rule 68 (mulexpr2)]
    T_real       [reduce using rule 68 (mulexpr2)]
    T_character  [reduce using rule 68 (mulexpr2)]
    T_string     [reduce using rule 68 (mulexpr2)]
    '+'          [reduce using rule 68 (mulexpr2)]
    '-'          [reduce using rule 68 (mulexpr2)]
    "+."         [reduce using rule 68 (mulexpr2)]
    "-."         [reduce using rule 68 (mulexpr2)]
    "("          [reduce using rule 68 (mulexpr2)]
    '!'          [reduce using rule 68 (mulexpr2)]
    $default     reduce using rule 68 (mulexpr2)

    letdef    go to state 69
    expr      go to state 94
    mulexpr2  go to state 95
    unop      go to state 71


State 58

   53 expr: T_id . mulexpr2
   55     | T_id . "[" expr mulexpr "]"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "["          shift, and go to state 96
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    "begin"      [reduce using rule 68 (mulexpr2)]
    "delete"     [reduce using rule 68 (mulexpr2)]
    "dim"        [reduce using rule 68 (mulexpr2)]
    "false"      [reduce using rule 68 (mulexpr2)]
    "for"        [reduce using rule 68 (mulexpr2)]
    "if"         [reduce using rule 68 (mulexpr2)]
    "let"        [reduce using rule 68 (mulexpr2)]
    "match"      [reduce using rule 68 (mulexpr2)]
    "new"        [reduce using rule 68 (mulexpr2)]
    "not"        [reduce using rule 68 (mulexpr2)]
    "true"       [reduce using rule 68 (mulexpr2)]
    "while"      [reduce using rule 68 (mulexpr2)]
    T_Id         [reduce using rule 68 (mulexpr2)]
    T_id         [reduce using rule 68 (mulexpr2)]
    T_integer    [reduce using rule 68 (mulexpr2)]
    T_real       [reduce using rule 68 (mulexpr2)]
    T_character  [reduce using rule 68 (mulexpr2)]
    T_string     [reduce using rule 68 (mulexpr2)]
    '+'          [reduce using rule 68 (mulexpr2)]
    '-'          [reduce using rule 68 (mulexpr2)]
    "+."         [reduce using rule 68 (mulexpr2)]
    "-."         [reduce using rule 68 (mulexpr2)]
    "("          [reduce using rule 68 (mulexpr2)]
    '!'          [reduce using rule 68 (mulexpr2)]
    $default     reduce using rule 68 (mulexpr2)

    letdef    go to state 69
    expr      go to state 94
    mulexpr2  go to state 97
    unop      go to state 71


State 59

   43 expr: T_integer .

    $default  reduce using rule 43 (expr)


State 60

   44 expr: T_real .

    $default  reduce using rule 44 (expr)


State 61

   45 expr: T_character .

    $default  reduce using rule 45 (expr)


State 62

   46 expr: T_string .

    $default  reduce using rule 46 (expr)


State 63

   72 unop: '+' .

    $default  reduce using rule 72 (unop)


State 64

   73 unop: '-' .

    $default  reduce using rule 73 (unop)


State 65

   74 unop: "+." .

    $default  reduce using rule 74 (unop)


State 66

   75 unop: "-." .

    $default  reduce using rule 75 (unop)


State 67

   49 expr: "(" . ")"
   50     | "(" . expr ")"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    ")"          shift, and go to state 98
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 99
    unop    go to state 71


State 68

   76 unop: '!' .

    $default  reduce using rule 76 (unop)


State 69

   60 expr: letdef . "in" expr

    "in"  shift, and go to state 100


State 70

   12 def: "mutable" T_id "[" expr . mulexpr "]"
   13    | "mutable" T_id "[" expr . mulexpr "]" ":" type
   52 expr: expr . binop expr

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ","    shift, and go to state 122
    ":="   shift, and go to state 123

    $default  reduce using rule 16 (mulexpr)

    mulexpr  go to state 124
    binop    go to state 125


State 71

   51 expr: unop . expr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 126
    unop    go to state 71


State 72

   29 par: "(" T_id ":" . type ")"

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44

    type  go to state 127


State 73

    8 def: T_id mulpar "=" expr .
   52 expr: expr . binop expr

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    $default  reduce using rule 8 (def)

    binop  go to state 125


State 74

    9 def: T_id mulpar ":" type . "=" expr
   36 type: type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 83
    "="    shift, and go to state 128
    "->"   shift, and go to state 84


State 75

    7 muldef: "and" def muldef .

    $default  reduce using rule 7 (muldef)


State 76

   25 constr: T_Id "of" . type multype

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44

    type  go to state 129


State 77

   23 mulconstr: "|" . constr mulconstr

    T_Id  shift, and go to state 34

    constr  go to state 130


State 78

   21 tdef: T_id "=" constr mulconstr .

    $default  reduce using rule 21 (tdef)


State 79

   20 multdef: "and" tdef multdef .

    $default  reduce using rule 20 (multdef)


State 80

   38 type: "array" "of" . type

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44

    type  go to state 131


State 81

   39 type: "array" "[" . "*" muldim "]" "of" type

    "*"  shift, and go to state 132


State 82

   35 type: "(" type . ")"
   36     | type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 83
    ")"    shift, and go to state 133
    "->"   shift, and go to state 84


State 83

   37 type: type "ref" .

    $default  reduce using rule 37 (type)


State 84

   36 type: type "->" . type

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44

    type  go to state 134


State 85

   52 expr: expr . binop expr
   61     | "begin" expr . "end"

    "end"  shift, and go to state 135
    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    binop  go to state 125


State 86

   52 expr: expr . binop expr
   59     | "delete" expr .

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    "mod"     [reduce using rule 59 (expr)]
    '*'       [reduce using rule 59 (expr)]
    '/'       [reduce using rule 59 (expr)]
    "*."      [reduce using rule 59 (expr)]
    "/."      [reduce using rule 59 (expr)]
    '+'       [reduce using rule 59 (expr)]
    '-'       [reduce using rule 59 (expr)]
    "+."      [reduce using rule 59 (expr)]
    "-."      [reduce using rule 59 (expr)]
    '='       [reduce using rule 59 (expr)]
    "<>"      [reduce using rule 59 (expr)]
    '>'       [reduce using rule 59 (expr)]
    '<'       [reduce using rule 59 (expr)]
    "<="      [reduce using rule 59 (expr)]
    ">="      [reduce using rule 59 (expr)]
    "=="      [reduce using rule 59 (expr)]
    "!="      [reduce using rule 59 (expr)]
    "&&"      [reduce using rule 59 (expr)]
    "||"      [reduce using rule 59 (expr)]
    ';'       [reduce using rule 59 (expr)]
    "**"      [reduce using rule 59 (expr)]
    ":="      [reduce using rule 59 (expr)]
    $default  reduce using rule 59 (expr)

    binop  go to state 125


State 87

   56 expr: "dim" T_id .

    $default  reduce using rule 56 (expr)


State 88

   57 expr: "dim" T_integer . T_id

    T_id  shift, and go to state 136


State 89

   65 expr: "for" T_id . "=" expr "to" expr "do" expr "done"
   66     | "for" T_id . "=" expr "downto" expr "do" expr "done"

    "="  shift, and go to state 137


State 90

   52 expr: expr . binop expr
   62     | "if" expr . "then" expr
   63     | "if" expr . "then" expr "else" expr

    "mod"   shift, and go to state 101
    "then"  shift, and go to state 138
    '*'     shift, and go to state 102
    '/'     shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    '+'     shift, and go to state 106
    '-'     shift, and go to state 107
    "+."    shift, and go to state 108
    "-."    shift, and go to state 109
    '='     shift, and go to state 110
    "<>"    shift, and go to state 111
    '>'     shift, and go to state 112
    '<'     shift, and go to state 113
    "<="    shift, and go to state 114
    ">="    shift, and go to state 115
    "=="    shift, and go to state 116
    "!="    shift, and go to state 117
    "&&"    shift, and go to state 118
    "||"    shift, and go to state 119
    ';'     shift, and go to state 120
    "**"    shift, and go to state 121
    ":="    shift, and go to state 123

    binop  go to state 125


State 91

   52 expr: expr . binop expr
   67     | "match" expr . "with" clause mulclause "end"

    "mod"   shift, and go to state 101
    "with"  shift, and go to state 139
    '*'     shift, and go to state 102
    '/'     shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    '+'     shift, and go to state 106
    '-'     shift, and go to state 107
    "+."    shift, and go to state 108
    "-."    shift, and go to state 109
    '='     shift, and go to state 110
    "<>"    shift, and go to state 111
    '>'     shift, and go to state 112
    '<'     shift, and go to state 113
    "<="    shift, and go to state 114
    ">="    shift, and go to state 115
    "=="    shift, and go to state 116
    "!="    shift, and go to state 117
    "&&"    shift, and go to state 118
    "||"    shift, and go to state 119
    ';'     shift, and go to state 120
    "**"    shift, and go to state 121
    ":="    shift, and go to state 123

    binop  go to state 125


State 92

   36 type: type . "->" type
   37     | type . "ref"
   58 expr: "new" type .

    "ref"  shift, and go to state 83
    "->"   shift, and go to state 84

    $default  reduce using rule 58 (expr)


State 93

   52 expr: expr . binop expr
   64     | "while" expr . "do" expr "done"

    "do"   shift, and go to state 140
    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    binop  go to state 125


State 94

   52 expr: expr . binop expr
   69 mulexpr2: expr . mulexpr2

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "mod"        shift, and go to state 101
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '*'          shift, and go to state 102
    '/'          shift, and go to state 103
    "*."         shift, and go to state 104
    "/."         shift, and go to state 105
    '+'          shift, and go to state 141
    '-'          shift, and go to state 142
    "+."         shift, and go to state 143
    "-."         shift, and go to state 144
    '='          shift, and go to state 110
    "<>"         shift, and go to state 111
    '>'          shift, and go to state 112
    '<'          shift, and go to state 113
    "<="         shift, and go to state 114
    ">="         shift, and go to state 115
    "=="         shift, and go to state 116
    "!="         shift, and go to state 117
    "&&"         shift, and go to state 118
    "||"         shift, and go to state 119
    ';'          shift, and go to state 120
    "**"         shift, and go to state 121
    "("          shift, and go to state 67
    '!'          shift, and go to state 68
    ":="         shift, and go to state 123

    "begin"      [reduce using rule 68 (mulexpr2)]
    "delete"     [reduce using rule 68 (mulexpr2)]
    "dim"        [reduce using rule 68 (mulexpr2)]
    "false"      [reduce using rule 68 (mulexpr2)]
    "for"        [reduce using rule 68 (mulexpr2)]
    "if"         [reduce using rule 68 (mulexpr2)]
    "let"        [reduce using rule 68 (mulexpr2)]
    "match"      [reduce using rule 68 (mulexpr2)]
    "mod"        [reduce using rule 68 (mulexpr2)]
    "new"        [reduce using rule 68 (mulexpr2)]
    "not"        [reduce using rule 68 (mulexpr2)]
    "true"       [reduce using rule 68 (mulexpr2)]
    "while"      [reduce using rule 68 (mulexpr2)]
    T_Id         [reduce using rule 68 (mulexpr2)]
    T_id         [reduce using rule 68 (mulexpr2)]
    T_integer    [reduce using rule 68 (mulexpr2)]
    T_real       [reduce using rule 68 (mulexpr2)]
    T_character  [reduce using rule 68 (mulexpr2)]
    T_string     [reduce using rule 68 (mulexpr2)]
    '*'          [reduce using rule 68 (mulexpr2)]
    '/'          [reduce using rule 68 (mulexpr2)]
    "*."         [reduce using rule 68 (mulexpr2)]
    "/."         [reduce using rule 68 (mulexpr2)]
    '+'          [reduce using rule 68 (mulexpr2)]
    '-'          [reduce using rule 68 (mulexpr2)]
    "+."         [reduce using rule 68 (mulexpr2)]
    "-."         [reduce using rule 68 (mulexpr2)]
    '='          [reduce using rule 68 (mulexpr2)]
    "<>"         [reduce using rule 68 (mulexpr2)]
    '>'          [reduce using rule 68 (mulexpr2)]
    '<'          [reduce using rule 68 (mulexpr2)]
    "<="         [reduce using rule 68 (mulexpr2)]
    ">="         [reduce using rule 68 (mulexpr2)]
    "=="         [reduce using rule 68 (mulexpr2)]
    "!="         [reduce using rule 68 (mulexpr2)]
    "&&"         [reduce using rule 68 (mulexpr2)]
    "||"         [reduce using rule 68 (mulexpr2)]
    ';'          [reduce using rule 68 (mulexpr2)]
    "**"         [reduce using rule 68 (mulexpr2)]
    "("          [reduce using rule 68 (mulexpr2)]
    '!'          [reduce using rule 68 (mulexpr2)]
    ":="         [reduce using rule 68 (mulexpr2)]
    $default     reduce using rule 68 (mulexpr2)

    letdef    go to state 69
    expr      go to state 94
    mulexpr2  go to state 145
    unop      go to state 71
    binop     go to state 125


State 95

   54 expr: T_Id mulexpr2 .

    $default  reduce using rule 54 (expr)


State 96

   55 expr: T_id "[" . expr mulexpr "]"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 146
    unop    go to state 71


State 97

   53 expr: T_id mulexpr2 .

    $default  reduce using rule 53 (expr)


State 98

   49 expr: "(" ")" .

    $default  reduce using rule 49 (expr)


State 99

   50 expr: "(" expr . ")"
   52     | expr . binop expr

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ")"    shift, and go to state 147
    ":="   shift, and go to state 123

    binop  go to state 125


State 100

   60 expr: letdef "in" . expr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 148
    unop    go to state 71


State 101

   86 binop: "mod" .

    $default  reduce using rule 86 (binop)


State 102

   80 binop: '*' .

    $default  reduce using rule 80 (binop)


State 103

   81 binop: '/' .

    $default  reduce using rule 81 (binop)


State 104

   84 binop: "*." .

    $default  reduce using rule 84 (binop)


State 105

   85 binop: "/." .

    $default  reduce using rule 85 (binop)


State 106

   78 binop: '+' .

    $default  reduce using rule 78 (binop)


State 107

   79 binop: '-' .

    $default  reduce using rule 79 (binop)


State 108

   82 binop: "+." .

    $default  reduce using rule 82 (binop)


State 109

   83 binop: "-." .

    $default  reduce using rule 83 (binop)


State 110

   88 binop: '=' .

    $default  reduce using rule 88 (binop)


State 111

   89 binop: "<>" .

    $default  reduce using rule 89 (binop)


State 112

   91 binop: '>' .

    $default  reduce using rule 91 (binop)


State 113

   90 binop: '<' .

    $default  reduce using rule 90 (binop)


State 114

   92 binop: "<=" .

    $default  reduce using rule 92 (binop)


State 115

   93 binop: ">=" .

    $default  reduce using rule 93 (binop)


State 116

   94 binop: "==" .

    $default  reduce using rule 94 (binop)


State 117

   95 binop: "!=" .

    $default  reduce using rule 95 (binop)


State 118

   96 binop: "&&" .

    $default  reduce using rule 96 (binop)


State 119

   97 binop: "||" .

    $default  reduce using rule 97 (binop)


State 120

   98 binop: ';' .

    $default  reduce using rule 98 (binop)


State 121

   87 binop: "**" .

    $default  reduce using rule 87 (binop)


State 122

   17 mulexpr: "," . expr mulexpr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 149
    unop    go to state 71


State 123

   99 binop: ":=" .

    $default  reduce using rule 99 (binop)


State 124

   12 def: "mutable" T_id "[" expr mulexpr . "]"
   13    | "mutable" T_id "[" expr mulexpr . "]" ":" type

    "]"  shift, and go to state 150


State 125

   52 expr: expr binop . expr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 151
    unop    go to state 71


State 126

   51 expr: unop expr .
   52     | expr . binop expr

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    "mod"     [reduce using rule 51 (expr)]
    '*'       [reduce using rule 51 (expr)]
    '/'       [reduce using rule 51 (expr)]
    "*."      [reduce using rule 51 (expr)]
    "/."      [reduce using rule 51 (expr)]
    '+'       [reduce using rule 51 (expr)]
    '-'       [reduce using rule 51 (expr)]
    "+."      [reduce using rule 51 (expr)]
    "-."      [reduce using rule 51 (expr)]
    '='       [reduce using rule 51 (expr)]
    "<>"      [reduce using rule 51 (expr)]
    '>'       [reduce using rule 51 (expr)]
    '<'       [reduce using rule 51 (expr)]
    "<="      [reduce using rule 51 (expr)]
    ">="      [reduce using rule 51 (expr)]
    "=="      [reduce using rule 51 (expr)]
    "!="      [reduce using rule 51 (expr)]
    "&&"      [reduce using rule 51 (expr)]
    "||"      [reduce using rule 51 (expr)]
    ';'       [reduce using rule 51 (expr)]
    "**"      [reduce using rule 51 (expr)]
    ":="      [reduce using rule 51 (expr)]
    $default  reduce using rule 51 (expr)

    binop  go to state 125


State 127

   29 par: "(" T_id ":" type . ")"
   36 type: type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 83
    ")"    shift, and go to state 152
    "->"   shift, and go to state 84


State 128

    9 def: T_id mulpar ":" type "=" . expr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 153
    unop    go to state 71


State 129

   25 constr: T_Id "of" type . multype
   36 type: type . "->" type
   37     | type . "ref"

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "ref"    shift, and go to state 83
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44
    "->"     shift, and go to state 84

    $default  reduce using rule 26 (multype)

    multype  go to state 154
    type     go to state 155


State 130

   23 mulconstr: "|" constr . mulconstr

    "|"  shift, and go to state 77

    $default  reduce using rule 22 (mulconstr)

    mulconstr  go to state 156


State 131

   36 type: type . "->" type
   37     | type . "ref"
   38     | "array" "of" type .

    "ref"  shift, and go to state 83
    "->"   shift, and go to state 84

    "ref"     [reduce using rule 38 (type)]
    "->"      [reduce using rule 38 (type)]
    $default  reduce using rule 38 (type)


State 132

   39 type: "array" "[" "*" . muldim "]" "of" type

    ","  shift, and go to state 157

    $default  reduce using rule 41 (muldim)

    muldim  go to state 158


State 133

   35 type: "(" type ")" .

    $default  reduce using rule 35 (type)


State 134

   36 type: type . "->" type
   36     | type "->" type .
   37     | type . "ref"

    "ref"  shift, and go to state 83
    "->"   shift, and go to state 84

    "ref"     [reduce using rule 36 (type)]
    "->"      [reduce using rule 36 (type)]
    $default  reduce using rule 36 (type)


State 135

   61 expr: "begin" expr "end" .

    $default  reduce using rule 61 (expr)


State 136

   57 expr: "dim" T_integer T_id .

    $default  reduce using rule 57 (expr)


State 137

   65 expr: "for" T_id "=" . expr "to" expr "do" expr "done"
   66     | "for" T_id "=" . expr "downto" expr "do" expr "done"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 159
    unop    go to state 71


State 138

   62 expr: "if" expr "then" . expr
   63     | "if" expr "then" . expr "else" expr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 160
    unop    go to state 71


State 139

   67 expr: "match" expr "with" . clause mulclause "end"

    "false"      shift, and go to state 161
    "true"       shift, and go to state 162
    T_Id         shift, and go to state 163
    T_id         shift, and go to state 164
    T_integer    shift, and go to state 165
    T_real       shift, and go to state 166
    T_character  shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    "+."         shift, and go to state 170
    "-."         shift, and go to state 171
    "("          shift, and go to state 172

    clause   go to state 173
    pattern  go to state 174


State 140

   64 expr: "while" expr "do" . expr "done"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 175
    unop    go to state 71


State 141

   72 unop: '+' .
   78 binop: '+' .

    "begin"      reduce using rule 72 (unop)
    "begin"      [reduce using rule 78 (binop)]
    "delete"     reduce using rule 72 (unop)
    "delete"     [reduce using rule 78 (binop)]
    "dim"        reduce using rule 72 (unop)
    "dim"        [reduce using rule 78 (binop)]
    "false"      reduce using rule 72 (unop)
    "false"      [reduce using rule 78 (binop)]
    "for"        reduce using rule 72 (unop)
    "for"        [reduce using rule 78 (binop)]
    "if"         reduce using rule 72 (unop)
    "if"         [reduce using rule 78 (binop)]
    "let"        reduce using rule 72 (unop)
    "let"        [reduce using rule 78 (binop)]
    "match"      reduce using rule 72 (unop)
    "match"      [reduce using rule 78 (binop)]
    "new"        reduce using rule 72 (unop)
    "new"        [reduce using rule 78 (binop)]
    "not"        reduce using rule 72 (unop)
    "not"        [reduce using rule 78 (binop)]
    "true"       reduce using rule 72 (unop)
    "true"       [reduce using rule 78 (binop)]
    "while"      reduce using rule 72 (unop)
    "while"      [reduce using rule 78 (binop)]
    T_Id         reduce using rule 72 (unop)
    T_Id         [reduce using rule 78 (binop)]
    T_id         reduce using rule 72 (unop)
    T_id         [reduce using rule 78 (binop)]
    T_integer    reduce using rule 72 (unop)
    T_integer    [reduce using rule 78 (binop)]
    T_real       reduce using rule 72 (unop)
    T_real       [reduce using rule 78 (binop)]
    T_character  reduce using rule 72 (unop)
    T_character  [reduce using rule 78 (binop)]
    T_string     reduce using rule 72 (unop)
    T_string     [reduce using rule 78 (binop)]
    '+'          reduce using rule 72 (unop)
    '+'          [reduce using rule 78 (binop)]
    '-'          reduce using rule 72 (unop)
    '-'          [reduce using rule 78 (binop)]
    "+."         reduce using rule 72 (unop)
    "+."         [reduce using rule 78 (binop)]
    "-."         reduce using rule 72 (unop)
    "-."         [reduce using rule 78 (binop)]
    "("          reduce using rule 72 (unop)
    "("          [reduce using rule 78 (binop)]
    '!'          reduce using rule 72 (unop)
    '!'          [reduce using rule 78 (binop)]
    $default     reduce using rule 72 (unop)


State 142

   73 unop: '-' .
   79 binop: '-' .

    "begin"      reduce using rule 73 (unop)
    "begin"      [reduce using rule 79 (binop)]
    "delete"     reduce using rule 73 (unop)
    "delete"     [reduce using rule 79 (binop)]
    "dim"        reduce using rule 73 (unop)
    "dim"        [reduce using rule 79 (binop)]
    "false"      reduce using rule 73 (unop)
    "false"      [reduce using rule 79 (binop)]
    "for"        reduce using rule 73 (unop)
    "for"        [reduce using rule 79 (binop)]
    "if"         reduce using rule 73 (unop)
    "if"         [reduce using rule 79 (binop)]
    "let"        reduce using rule 73 (unop)
    "let"        [reduce using rule 79 (binop)]
    "match"      reduce using rule 73 (unop)
    "match"      [reduce using rule 79 (binop)]
    "new"        reduce using rule 73 (unop)
    "new"        [reduce using rule 79 (binop)]
    "not"        reduce using rule 73 (unop)
    "not"        [reduce using rule 79 (binop)]
    "true"       reduce using rule 73 (unop)
    "true"       [reduce using rule 79 (binop)]
    "while"      reduce using rule 73 (unop)
    "while"      [reduce using rule 79 (binop)]
    T_Id         reduce using rule 73 (unop)
    T_Id         [reduce using rule 79 (binop)]
    T_id         reduce using rule 73 (unop)
    T_id         [reduce using rule 79 (binop)]
    T_integer    reduce using rule 73 (unop)
    T_integer    [reduce using rule 79 (binop)]
    T_real       reduce using rule 73 (unop)
    T_real       [reduce using rule 79 (binop)]
    T_character  reduce using rule 73 (unop)
    T_character  [reduce using rule 79 (binop)]
    T_string     reduce using rule 73 (unop)
    T_string     [reduce using rule 79 (binop)]
    '+'          reduce using rule 73 (unop)
    '+'          [reduce using rule 79 (binop)]
    '-'          reduce using rule 73 (unop)
    '-'          [reduce using rule 79 (binop)]
    "+."         reduce using rule 73 (unop)
    "+."         [reduce using rule 79 (binop)]
    "-."         reduce using rule 73 (unop)
    "-."         [reduce using rule 79 (binop)]
    "("          reduce using rule 73 (unop)
    "("          [reduce using rule 79 (binop)]
    '!'          reduce using rule 73 (unop)
    '!'          [reduce using rule 79 (binop)]
    $default     reduce using rule 73 (unop)


State 143

   74 unop: "+." .
   82 binop: "+." .

    "begin"      reduce using rule 74 (unop)
    "begin"      [reduce using rule 82 (binop)]
    "delete"     reduce using rule 74 (unop)
    "delete"     [reduce using rule 82 (binop)]
    "dim"        reduce using rule 74 (unop)
    "dim"        [reduce using rule 82 (binop)]
    "false"      reduce using rule 74 (unop)
    "false"      [reduce using rule 82 (binop)]
    "for"        reduce using rule 74 (unop)
    "for"        [reduce using rule 82 (binop)]
    "if"         reduce using rule 74 (unop)
    "if"         [reduce using rule 82 (binop)]
    "let"        reduce using rule 74 (unop)
    "let"        [reduce using rule 82 (binop)]
    "match"      reduce using rule 74 (unop)
    "match"      [reduce using rule 82 (binop)]
    "new"        reduce using rule 74 (unop)
    "new"        [reduce using rule 82 (binop)]
    "not"        reduce using rule 74 (unop)
    "not"        [reduce using rule 82 (binop)]
    "true"       reduce using rule 74 (unop)
    "true"       [reduce using rule 82 (binop)]
    "while"      reduce using rule 74 (unop)
    "while"      [reduce using rule 82 (binop)]
    T_Id         reduce using rule 74 (unop)
    T_Id         [reduce using rule 82 (binop)]
    T_id         reduce using rule 74 (unop)
    T_id         [reduce using rule 82 (binop)]
    T_integer    reduce using rule 74 (unop)
    T_integer    [reduce using rule 82 (binop)]
    T_real       reduce using rule 74 (unop)
    T_real       [reduce using rule 82 (binop)]
    T_character  reduce using rule 74 (unop)
    T_character  [reduce using rule 82 (binop)]
    T_string     reduce using rule 74 (unop)
    T_string     [reduce using rule 82 (binop)]
    '+'          reduce using rule 74 (unop)
    '+'          [reduce using rule 82 (binop)]
    '-'          reduce using rule 74 (unop)
    '-'          [reduce using rule 82 (binop)]
    "+."         reduce using rule 74 (unop)
    "+."         [reduce using rule 82 (binop)]
    "-."         reduce using rule 74 (unop)
    "-."         [reduce using rule 82 (binop)]
    "("          reduce using rule 74 (unop)
    "("          [reduce using rule 82 (binop)]
    '!'          reduce using rule 74 (unop)
    '!'          [reduce using rule 82 (binop)]
    $default     reduce using rule 74 (unop)


State 144

   75 unop: "-." .
   83 binop: "-." .

    "begin"      reduce using rule 75 (unop)
    "begin"      [reduce using rule 83 (binop)]
    "delete"     reduce using rule 75 (unop)
    "delete"     [reduce using rule 83 (binop)]
    "dim"        reduce using rule 75 (unop)
    "dim"        [reduce using rule 83 (binop)]
    "false"      reduce using rule 75 (unop)
    "false"      [reduce using rule 83 (binop)]
    "for"        reduce using rule 75 (unop)
    "for"        [reduce using rule 83 (binop)]
    "if"         reduce using rule 75 (unop)
    "if"         [reduce using rule 83 (binop)]
    "let"        reduce using rule 75 (unop)
    "let"        [reduce using rule 83 (binop)]
    "match"      reduce using rule 75 (unop)
    "match"      [reduce using rule 83 (binop)]
    "new"        reduce using rule 75 (unop)
    "new"        [reduce using rule 83 (binop)]
    "not"        reduce using rule 75 (unop)
    "not"        [reduce using rule 83 (binop)]
    "true"       reduce using rule 75 (unop)
    "true"       [reduce using rule 83 (binop)]
    "while"      reduce using rule 75 (unop)
    "while"      [reduce using rule 83 (binop)]
    T_Id         reduce using rule 75 (unop)
    T_Id         [reduce using rule 83 (binop)]
    T_id         reduce using rule 75 (unop)
    T_id         [reduce using rule 83 (binop)]
    T_integer    reduce using rule 75 (unop)
    T_integer    [reduce using rule 83 (binop)]
    T_real       reduce using rule 75 (unop)
    T_real       [reduce using rule 83 (binop)]
    T_character  reduce using rule 75 (unop)
    T_character  [reduce using rule 83 (binop)]
    T_string     reduce using rule 75 (unop)
    T_string     [reduce using rule 83 (binop)]
    '+'          reduce using rule 75 (unop)
    '+'          [reduce using rule 83 (binop)]
    '-'          reduce using rule 75 (unop)
    '-'          [reduce using rule 83 (binop)]
    "+."         reduce using rule 75 (unop)
    "+."         [reduce using rule 83 (binop)]
    "-."         reduce using rule 75 (unop)
    "-."         [reduce using rule 83 (binop)]
    "("          reduce using rule 75 (unop)
    "("          [reduce using rule 83 (binop)]
    '!'          reduce using rule 75 (unop)
    '!'          [reduce using rule 83 (binop)]
    $default     reduce using rule 75 (unop)


State 145

   69 mulexpr2: expr mulexpr2 .

    $default  reduce using rule 69 (mulexpr2)


State 146

   52 expr: expr . binop expr
   55     | T_id "[" expr . mulexpr "]"

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ","    shift, and go to state 122
    ":="   shift, and go to state 123

    $default  reduce using rule 16 (mulexpr)

    mulexpr  go to state 176
    binop    go to state 125


State 147

   50 expr: "(" expr ")" .

    $default  reduce using rule 50 (expr)


State 148

   52 expr: expr . binop expr
   60     | letdef "in" expr .

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    "mod"     [reduce using rule 60 (expr)]
    '*'       [reduce using rule 60 (expr)]
    '/'       [reduce using rule 60 (expr)]
    "*."      [reduce using rule 60 (expr)]
    "/."      [reduce using rule 60 (expr)]
    '+'       [reduce using rule 60 (expr)]
    '-'       [reduce using rule 60 (expr)]
    "+."      [reduce using rule 60 (expr)]
    "-."      [reduce using rule 60 (expr)]
    '='       [reduce using rule 60 (expr)]
    "<>"      [reduce using rule 60 (expr)]
    '>'       [reduce using rule 60 (expr)]
    '<'       [reduce using rule 60 (expr)]
    "<="      [reduce using rule 60 (expr)]
    ">="      [reduce using rule 60 (expr)]
    "=="      [reduce using rule 60 (expr)]
    "!="      [reduce using rule 60 (expr)]
    "&&"      [reduce using rule 60 (expr)]
    "||"      [reduce using rule 60 (expr)]
    ';'       [reduce using rule 60 (expr)]
    "**"      [reduce using rule 60 (expr)]
    ":="      [reduce using rule 60 (expr)]
    $default  reduce using rule 60 (expr)

    binop  go to state 125


State 149

   17 mulexpr: "," expr . mulexpr
   52 expr: expr . binop expr

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ","    shift, and go to state 122
    ":="   shift, and go to state 123

    $default  reduce using rule 16 (mulexpr)

    mulexpr  go to state 177
    binop    go to state 125


State 150

   12 def: "mutable" T_id "[" expr mulexpr "]" .
   13    | "mutable" T_id "[" expr mulexpr "]" . ":" type

    ":"  shift, and go to state 178

    $default  reduce using rule 12 (def)


State 151

   52 expr: expr . binop expr
   52     | expr binop expr .

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    "mod"     [reduce using rule 52 (expr)]
    '*'       [reduce using rule 52 (expr)]
    '/'       [reduce using rule 52 (expr)]
    "*."      [reduce using rule 52 (expr)]
    "/."      [reduce using rule 52 (expr)]
    '+'       [reduce using rule 52 (expr)]
    '-'       [reduce using rule 52 (expr)]
    "+."      [reduce using rule 52 (expr)]
    "-."      [reduce using rule 52 (expr)]
    '='       [reduce using rule 52 (expr)]
    "<>"      [reduce using rule 52 (expr)]
    '>'       [reduce using rule 52 (expr)]
    '<'       [reduce using rule 52 (expr)]
    "<="      [reduce using rule 52 (expr)]
    ">="      [reduce using rule 52 (expr)]
    "=="      [reduce using rule 52 (expr)]
    "!="      [reduce using rule 52 (expr)]
    "&&"      [reduce using rule 52 (expr)]
    "||"      [reduce using rule 52 (expr)]
    ';'       [reduce using rule 52 (expr)]
    "**"      [reduce using rule 52 (expr)]
    ":="      [reduce using rule 52 (expr)]
    $default  reduce using rule 52 (expr)

    binop  go to state 125


State 152

   29 par: "(" T_id ":" type ")" .

    $default  reduce using rule 29 (par)


State 153

    9 def: T_id mulpar ":" type "=" expr .
   52 expr: expr . binop expr

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    $default  reduce using rule 9 (def)

    binop  go to state 125


State 154

   25 constr: T_Id "of" type multype .

    $default  reduce using rule 25 (constr)


State 155

   27 multype: type . multype
   36 type: type . "->" type
   37     | type . "ref"

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "ref"    shift, and go to state 83
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44
    "->"     shift, and go to state 84

    $default  reduce using rule 26 (multype)

    multype  go to state 179
    type     go to state 155


State 156

   23 mulconstr: "|" constr mulconstr .

    $default  reduce using rule 23 (mulconstr)


State 157

   42 muldim: "," . "*" muldim

    "*"  shift, and go to state 180


State 158

   39 type: "array" "[" "*" muldim . "]" "of" type

    "]"  shift, and go to state 181


State 159

   52 expr: expr . binop expr
   65     | "for" T_id "=" expr . "to" expr "do" expr "done"
   66     | "for" T_id "=" expr . "downto" expr "do" expr "done"

    "downto"  shift, and go to state 182
    "mod"     shift, and go to state 101
    "to"      shift, and go to state 183
    '*'       shift, and go to state 102
    '/'       shift, and go to state 103
    "*."      shift, and go to state 104
    "/."      shift, and go to state 105
    '+'       shift, and go to state 106
    '-'       shift, and go to state 107
    "+."      shift, and go to state 108
    "-."      shift, and go to state 109
    '='       shift, and go to state 110
    "<>"      shift, and go to state 111
    '>'       shift, and go to state 112
    '<'       shift, and go to state 113
    "<="      shift, and go to state 114
    ">="      shift, and go to state 115
    "=="      shift, and go to state 116
    "!="      shift, and go to state 117
    "&&"      shift, and go to state 118
    "||"      shift, and go to state 119
    ';'       shift, and go to state 120
    "**"      shift, and go to state 121
    ":="      shift, and go to state 123

    binop  go to state 125


State 160

   52 expr: expr . binop expr
   62     | "if" expr "then" expr .
   63     | "if" expr "then" expr . "else" expr

    "else"  shift, and go to state 184
    "mod"   shift, and go to state 101
    '*'     shift, and go to state 102
    '/'     shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    '+'     shift, and go to state 106
    '-'     shift, and go to state 107
    "+."    shift, and go to state 108
    "-."    shift, and go to state 109
    '='     shift, and go to state 110
    "<>"    shift, and go to state 111
    '>'     shift, and go to state 112
    '<'     shift, and go to state 113
    "<="    shift, and go to state 114
    ">="    shift, and go to state 115
    "=="    shift, and go to state 116
    "!="    shift, and go to state 117
    "&&"    shift, and go to state 118
    "||"    shift, and go to state 119
    ';'     shift, and go to state 120
    "**"    shift, and go to state 121
    ":="    shift, and go to state 123

    "else"    [reduce using rule 62 (expr)]
    "mod"     [reduce using rule 62 (expr)]
    '*'       [reduce using rule 62 (expr)]
    '/'       [reduce using rule 62 (expr)]
    "*."      [reduce using rule 62 (expr)]
    "/."      [reduce using rule 62 (expr)]
    '+'       [reduce using rule 62 (expr)]
    '-'       [reduce using rule 62 (expr)]
    "+."      [reduce using rule 62 (expr)]
    "-."      [reduce using rule 62 (expr)]
    '='       [reduce using rule 62 (expr)]
    "<>"      [reduce using rule 62 (expr)]
    '>'       [reduce using rule 62 (expr)]
    '<'       [reduce using rule 62 (expr)]
    "<="      [reduce using rule 62 (expr)]
    ">="      [reduce using rule 62 (expr)]
    "=="      [reduce using rule 62 (expr)]
    "!="      [reduce using rule 62 (expr)]
    "&&"      [reduce using rule 62 (expr)]
    "||"      [reduce using rule 62 (expr)]
    ';'       [reduce using rule 62 (expr)]
    "**"      [reduce using rule 62 (expr)]
    ":="      [reduce using rule 62 (expr)]
    $default  reduce using rule 62 (expr)

    binop  go to state 125


State 161

  109 pattern: "false" .

    $default  reduce using rule 109 (pattern)


State 162

  108 pattern: "true" .

    $default  reduce using rule 108 (pattern)


State 163

  112 pattern: T_Id . mulpat

    "false"      shift, and go to state 161
    "true"       shift, and go to state 162
    T_Id         shift, and go to state 163
    T_id         shift, and go to state 164
    T_integer    shift, and go to state 165
    T_real       shift, and go to state 166
    T_character  shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    "+."         shift, and go to state 170
    "-."         shift, and go to state 171
    "("          shift, and go to state 172

    "false"      [reduce using rule 113 (mulpat)]
    "true"       [reduce using rule 113 (mulpat)]
    T_Id         [reduce using rule 113 (mulpat)]
    T_id         [reduce using rule 113 (mulpat)]
    T_integer    [reduce using rule 113 (mulpat)]
    T_real       [reduce using rule 113 (mulpat)]
    T_character  [reduce using rule 113 (mulpat)]
    '+'          [reduce using rule 113 (mulpat)]
    '-'          [reduce using rule 113 (mulpat)]
    "+."         [reduce using rule 113 (mulpat)]
    "-."         [reduce using rule 113 (mulpat)]
    "("          [reduce using rule 113 (mulpat)]
    $default     reduce using rule 113 (mulpat)

    pattern  go to state 185
    mulpat   go to state 186


State 164

  110 pattern: T_id .

    $default  reduce using rule 110 (pattern)


State 165

  101 pattern: T_integer .

    $default  reduce using rule 101 (pattern)


State 166

  104 pattern: T_real .

    $default  reduce using rule 104 (pattern)


State 167

  107 pattern: T_character .

    $default  reduce using rule 107 (pattern)


State 168

  102 pattern: '+' . T_integer

    T_integer  shift, and go to state 187


State 169

  103 pattern: '-' . T_integer

    T_integer  shift, and go to state 188


State 170

  105 pattern: "+." . T_real

    T_real  shift, and go to state 189


State 171

  106 pattern: "-." . T_real

    T_real  shift, and go to state 190


State 172

  111 pattern: "(" . pattern ")"

    "false"      shift, and go to state 161
    "true"       shift, and go to state 162
    T_Id         shift, and go to state 163
    T_id         shift, and go to state 164
    T_integer    shift, and go to state 165
    T_real       shift, and go to state 166
    T_character  shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    "+."         shift, and go to state 170
    "-."         shift, and go to state 171
    "("          shift, and go to state 172

    pattern  go to state 191


State 173

   67 expr: "match" expr "with" clause . mulclause "end"

    "|"  shift, and go to state 192

    $default  reduce using rule 70 (mulclause)

    mulclause  go to state 193


State 174

  100 clause: pattern . "->" expr

    "->"  shift, and go to state 194


State 175

   52 expr: expr . binop expr
   64     | "while" expr "do" expr . "done"

    "done"  shift, and go to state 195
    "mod"   shift, and go to state 101
    '*'     shift, and go to state 102
    '/'     shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    '+'     shift, and go to state 106
    '-'     shift, and go to state 107
    "+."    shift, and go to state 108
    "-."    shift, and go to state 109
    '='     shift, and go to state 110
    "<>"    shift, and go to state 111
    '>'     shift, and go to state 112
    '<'     shift, and go to state 113
    "<="    shift, and go to state 114
    ">="    shift, and go to state 115
    "=="    shift, and go to state 116
    "!="    shift, and go to state 117
    "&&"    shift, and go to state 118
    "||"    shift, and go to state 119
    ';'     shift, and go to state 120
    "**"    shift, and go to state 121
    ":="    shift, and go to state 123

    binop  go to state 125


State 176

   55 expr: T_id "[" expr mulexpr . "]"

    "]"  shift, and go to state 196


State 177

   17 mulexpr: "," expr mulexpr .

    $default  reduce using rule 17 (mulexpr)


State 178

   13 def: "mutable" T_id "[" expr mulexpr "]" ":" . type

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44

    type  go to state 197


State 179

   27 multype: type multype .

    $default  reduce using rule 27 (multype)


State 180

   42 muldim: "," "*" . muldim

    ","  shift, and go to state 157

    $default  reduce using rule 41 (muldim)

    muldim  go to state 198


State 181

   39 type: "array" "[" "*" muldim "]" . "of" type

    "of"  shift, and go to state 199


State 182

   66 expr: "for" T_id "=" expr "downto" . expr "do" expr "done"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 200
    unop    go to state 71


State 183

   65 expr: "for" T_id "=" expr "to" . expr "do" expr "done"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 201
    unop    go to state 71


State 184

   63 expr: "if" expr "then" expr "else" . expr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 202
    unop    go to state 71


State 185

  114 mulpat: pattern . mulpat

    "false"      shift, and go to state 161
    "true"       shift, and go to state 162
    T_Id         shift, and go to state 163
    T_id         shift, and go to state 164
    T_integer    shift, and go to state 165
    T_real       shift, and go to state 166
    T_character  shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    "+."         shift, and go to state 170
    "-."         shift, and go to state 171
    "("          shift, and go to state 172

    "false"      [reduce using rule 113 (mulpat)]
    "true"       [reduce using rule 113 (mulpat)]
    T_Id         [reduce using rule 113 (mulpat)]
    T_id         [reduce using rule 113 (mulpat)]
    T_integer    [reduce using rule 113 (mulpat)]
    T_real       [reduce using rule 113 (mulpat)]
    T_character  [reduce using rule 113 (mulpat)]
    '+'          [reduce using rule 113 (mulpat)]
    '-'          [reduce using rule 113 (mulpat)]
    "+."         [reduce using rule 113 (mulpat)]
    "-."         [reduce using rule 113 (mulpat)]
    "("          [reduce using rule 113 (mulpat)]
    $default     reduce using rule 113 (mulpat)

    pattern  go to state 185
    mulpat   go to state 203


State 186

  112 pattern: T_Id mulpat .

    $default  reduce using rule 112 (pattern)


State 187

  102 pattern: '+' T_integer .

    $default  reduce using rule 102 (pattern)


State 188

  103 pattern: '-' T_integer .

    $default  reduce using rule 103 (pattern)


State 189

  105 pattern: "+." T_real .

    $default  reduce using rule 105 (pattern)


State 190

  106 pattern: "-." T_real .

    $default  reduce using rule 106 (pattern)


State 191

  111 pattern: "(" pattern . ")"

    ")"  shift, and go to state 204


State 192

   71 mulclause: "|" . clause mulclause

    "false"      shift, and go to state 161
    "true"       shift, and go to state 162
    T_Id         shift, and go to state 163
    T_id         shift, and go to state 164
    T_integer    shift, and go to state 165
    T_real       shift, and go to state 166
    T_character  shift, and go to state 167
    '+'          shift, and go to state 168
    '-'          shift, and go to state 169
    "+."         shift, and go to state 170
    "-."         shift, and go to state 171
    "("          shift, and go to state 172

    clause   go to state 205
    pattern  go to state 174


State 193

   67 expr: "match" expr "with" clause mulclause . "end"

    "end"  shift, and go to state 206


State 194

  100 clause: pattern "->" . expr

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 207
    unop    go to state 71


State 195

   64 expr: "while" expr "do" expr "done" .

    $default  reduce using rule 64 (expr)


State 196

   55 expr: T_id "[" expr mulexpr "]" .

    $default  reduce using rule 55 (expr)


State 197

   13 def: "mutable" T_id "[" expr mulexpr "]" ":" type .
   36 type: type . "->" type
   37     | type . "ref"

    "ref"  shift, and go to state 83
    "->"   shift, and go to state 84

    $default  reduce using rule 13 (def)


State 198

   42 muldim: "," "*" muldim .

    $default  reduce using rule 42 (muldim)


State 199

   39 type: "array" "[" "*" muldim "]" "of" . type

    "array"  shift, and go to state 37
    "bool"   shift, and go to state 38
    "char"   shift, and go to state 39
    "float"  shift, and go to state 40
    "int"    shift, and go to state 41
    "unit"   shift, and go to state 42
    T_id     shift, and go to state 43
    "("      shift, and go to state 44

    type  go to state 208


State 200

   52 expr: expr . binop expr
   66     | "for" T_id "=" expr "downto" expr . "do" expr "done"

    "do"   shift, and go to state 209
    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    binop  go to state 125


State 201

   52 expr: expr . binop expr
   65     | "for" T_id "=" expr "to" expr . "do" expr "done"

    "do"   shift, and go to state 210
    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    binop  go to state 125


State 202

   52 expr: expr . binop expr
   63     | "if" expr "then" expr "else" expr .

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    "mod"     [reduce using rule 63 (expr)]
    '*'       [reduce using rule 63 (expr)]
    '/'       [reduce using rule 63 (expr)]
    "*."      [reduce using rule 63 (expr)]
    "/."      [reduce using rule 63 (expr)]
    '+'       [reduce using rule 63 (expr)]
    '-'       [reduce using rule 63 (expr)]
    "+."      [reduce using rule 63 (expr)]
    "-."      [reduce using rule 63 (expr)]
    '='       [reduce using rule 63 (expr)]
    "<>"      [reduce using rule 63 (expr)]
    '>'       [reduce using rule 63 (expr)]
    '<'       [reduce using rule 63 (expr)]
    "<="      [reduce using rule 63 (expr)]
    ">="      [reduce using rule 63 (expr)]
    "=="      [reduce using rule 63 (expr)]
    "!="      [reduce using rule 63 (expr)]
    "&&"      [reduce using rule 63 (expr)]
    "||"      [reduce using rule 63 (expr)]
    ';'       [reduce using rule 63 (expr)]
    "**"      [reduce using rule 63 (expr)]
    ":="      [reduce using rule 63 (expr)]
    $default  reduce using rule 63 (expr)

    binop  go to state 125


State 203

  114 mulpat: pattern mulpat .

    $default  reduce using rule 114 (mulpat)


State 204

  111 pattern: "(" pattern ")" .

    $default  reduce using rule 111 (pattern)


State 205

   71 mulclause: "|" clause . mulclause

    "|"  shift, and go to state 192

    $default  reduce using rule 70 (mulclause)

    mulclause  go to state 211


State 206

   67 expr: "match" expr "with" clause mulclause "end" .

    $default  reduce using rule 67 (expr)


State 207

   52 expr: expr . binop expr
  100 clause: pattern "->" expr .

    "mod"  shift, and go to state 101
    '*'    shift, and go to state 102
    '/'    shift, and go to state 103
    "*."   shift, and go to state 104
    "/."   shift, and go to state 105
    '+'    shift, and go to state 106
    '-'    shift, and go to state 107
    "+."   shift, and go to state 108
    "-."   shift, and go to state 109
    '='    shift, and go to state 110
    "<>"   shift, and go to state 111
    '>'    shift, and go to state 112
    '<'    shift, and go to state 113
    "<="   shift, and go to state 114
    ">="   shift, and go to state 115
    "=="   shift, and go to state 116
    "!="   shift, and go to state 117
    "&&"   shift, and go to state 118
    "||"   shift, and go to state 119
    ';'    shift, and go to state 120
    "**"   shift, and go to state 121
    ":="   shift, and go to state 123

    $default  reduce using rule 100 (clause)

    binop  go to state 125


State 208

   36 type: type . "->" type
   37     | type . "ref"
   39     | "array" "[" "*" muldim "]" "of" type .

    "ref"  shift, and go to state 83
    "->"   shift, and go to state 84

    "ref"     [reduce using rule 39 (type)]
    "->"      [reduce using rule 39 (type)]
    $default  reduce using rule 39 (type)


State 209

   66 expr: "for" T_id "=" expr "downto" expr "do" . expr "done"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 212
    unop    go to state 71


State 210

   65 expr: "for" T_id "=" expr "to" expr "do" . expr "done"

    "begin"      shift, and go to state 46
    "delete"     shift, and go to state 47
    "dim"        shift, and go to state 48
    "false"      shift, and go to state 49
    "for"        shift, and go to state 50
    "if"         shift, and go to state 51
    "let"        shift, and go to state 1
    "match"      shift, and go to state 52
    "new"        shift, and go to state 53
    "not"        shift, and go to state 54
    "true"       shift, and go to state 55
    "while"      shift, and go to state 56
    T_Id         shift, and go to state 57
    T_id         shift, and go to state 58
    T_integer    shift, and go to state 59
    T_real       shift, and go to state 60
    T_character  shift, and go to state 61
    T_string     shift, and go to state 62
    '+'          shift, and go to state 63
    '-'          shift, and go to state 64
    "+."         shift, and go to state 65
    "-."         shift, and go to state 66
    "("          shift, and go to state 67
    '!'          shift, and go to state 68

    letdef  go to state 69
    expr    go to state 213
    unop    go to state 71


State 211

   71 mulclause: "|" clause mulclause .

    $default  reduce using rule 71 (mulclause)


State 212

   52 expr: expr . binop expr
   66     | "for" T_id "=" expr "downto" expr "do" expr . "done"

    "done"  shift, and go to state 214
    "mod"   shift, and go to state 101
    '*'     shift, and go to state 102
    '/'     shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    '+'     shift, and go to state 106
    '-'     shift, and go to state 107
    "+."    shift, and go to state 108
    "-."    shift, and go to state 109
    '='     shift, and go to state 110
    "<>"    shift, and go to state 111
    '>'     shift, and go to state 112
    '<'     shift, and go to state 113
    "<="    shift, and go to state 114
    ">="    shift, and go to state 115
    "=="    shift, and go to state 116
    "!="    shift, and go to state 117
    "&&"    shift, and go to state 118
    "||"    shift, and go to state 119
    ';'     shift, and go to state 120
    "**"    shift, and go to state 121
    ":="    shift, and go to state 123

    binop  go to state 125


State 213

   52 expr: expr . binop expr
   65     | "for" T_id "=" expr "to" expr "do" expr . "done"

    "done"  shift, and go to state 215
    "mod"   shift, and go to state 101
    '*'     shift, and go to state 102
    '/'     shift, and go to state 103
    "*."    shift, and go to state 104
    "/."    shift, and go to state 105
    '+'     shift, and go to state 106
    '-'     shift, and go to state 107
    "+."    shift, and go to state 108
    "-."    shift, and go to state 109
    '='     shift, and go to state 110
    "<>"    shift, and go to state 111
    '>'     shift, and go to state 112
    '<'     shift, and go to state 113
    "<="    shift, and go to state 114
    ">="    shift, and go to state 115
    "=="    shift, and go to state 116
    "!="    shift, and go to state 117
    "&&"    shift, and go to state 118
    "||"    shift, and go to state 119
    ';'     shift, and go to state 120
    "**"    shift, and go to state 121
    ":="    shift, and go to state 123

    binop  go to state 125


State 214

   66 expr: "for" T_id "=" expr "downto" expr "do" expr "done" .

    $default  reduce using rule 66 (expr)


State 215

   65 expr: "for" T_id "=" expr "to" expr "do" expr "done" .

    $default  reduce using rule 65 (expr)
